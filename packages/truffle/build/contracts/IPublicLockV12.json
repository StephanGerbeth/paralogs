{
  "contractName": "IPublicLockV12",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lockCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "KEY_GRANTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LOCK_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicLockVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_keyPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "updateKeyPricing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newExpirationDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxNumberOfKeys",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxKeysPerAcccount",
          "type": "uint256"
        }
      ],
      "name": "updateLockConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getHasValidKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "keyExpirationTimestampFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfOwners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_lockName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_lockSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setLockMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_onKeyPurchaseHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onKeyCancelHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onValidKeyHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onTokenURIHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onKeyTransferHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onKeyExtendHook",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_onKeyGrantHook",
          "type": "address"
        }
      ],
      "name": "setEventHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_expirationTimestamps",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_keyManagers",
          "type": "address[]"
        }
      ],
      "name": "grantKeys",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "grantKeyExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_recipients",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_referrers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_keyManagers",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "extend",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "referrerFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "referrerFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeBasisPoint",
          "type": "uint256"
        }
      ],
      "name": "setReferrerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenIdFrom",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenIdTo",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mergeKeys",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasRefundValue",
          "type": "uint256"
        }
      ],
      "name": "setGasRefundValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_gasRefundValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "purchasePriceFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_transferFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateTransferFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "getTransferFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "expireAndRefundFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAndRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_freeTrialLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refundPenaltyBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "updateRefundPenalty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getCancelAndRefundValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "refund",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKeyGranter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addLockManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKeyGranter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isLockManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onKeyPurchaseHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onKeyCancelHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onValidKeyHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onTokenURIHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onKeyTransferHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onKeyExtendHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onKeyGrantHook",
      "outputs": [
        {
          "internalType": "address",
          "name": "hookAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_granter",
          "type": "address"
        }
      ],
      "name": "revokeKeyGranter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceLockManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxKeysPerAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freeTrialLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxNumberOfKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundPenaltyBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockProtocol",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "keyManagerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeShared",
          "type": "uint256"
        }
      ],
      "name": "shareKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_keyManager",
          "type": "address"
        }
      ],
      "name": "setKeyManagerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValidKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keyOwner",
          "type": "address"
        }
      ],
      "name": "totalKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numberOfKeys",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "lendKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "unlendKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOwner",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "schemaVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateSchemaVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "renewMembershipFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KEY_GRANTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addKeyGranter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addLockManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAndRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"expireAndRefundFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"extend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeTrialLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasRefundValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasRefundValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getCancelAndRefundValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"refund\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getHasValidKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"getTransferFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"grantKeyExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_expirationTimestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_keyManagers\",\"type\":\"address[]\"}],\"name\":\"grantKeys\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lockCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expirationDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxNumberOfKeys\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isKeyGranter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isLockManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwner\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isValidKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"keyExpirationTimestampFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keyManagerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lendKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxKeysPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxNumberOfKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenIdFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIdTo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mergeKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfOwners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onKeyCancelHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onKeyExtendHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onKeyGrantHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onKeyPurchaseHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onKeyTransferHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onTokenURIHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onValidKeyHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicLockVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_referrers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_keyManagers\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"purchasePriceFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"referrerFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"referrerFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundPenaltyBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"renewMembershipFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceLockManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_granter\",\"type\":\"address\"}],\"name\":\"revokeKeyGranter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onKeyPurchaseHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onKeyCancelHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onValidKeyHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onTokenURIHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onKeyTransferHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onKeyExtendHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_onKeyGrantHook\",\"type\":\"address\"}],\"name\":\"setEventHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasRefundValue\",\"type\":\"uint256\"}],\"name\":\"setGasRefundValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_keyManager\",\"type\":\"address\"}],\"name\":\"setKeyManagerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lockName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lockSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"}],\"name\":\"setLockMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoint\",\"type\":\"uint256\"}],\"name\":\"setReferrerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeShared\",\"type\":\"uint256\"}],\"name\":\"shareKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keyOwner\",\"type\":\"address\"}],\"name\":\"totalKeys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfKeys\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"unlendKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockProtocol\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_keyPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"updateKeyPricing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newExpirationDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxNumberOfKeys\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxKeysPerAcccount\",\"type\":\"uint256\"}],\"name\":\"updateLockConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_freeTrialLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refundPenaltyBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateRefundPenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateSchemaVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transferFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"updateTransferFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"returns\":{\"balance\":\"The number of valid keys owned by `_keyOwner`\"}},\"burn(uint256)\":{\"params\":{\"_tokenId\":\"the id of token to burn\"}},\"cancelAndRefund(uint256)\":{\"details\":\"allows the key manager to expire a given tokenId and send a refund to the keyOwner based on the amount of time remaining.\",\"params\":{\"_tokenId\":\"The id of the key to cancel.\"}},\"expireAndRefundFor(uint256,uint256)\":{\"details\":\"Invoked by a Lock manager to expire the user's key  and perform a refund and cancellation of the keyThrows if called by other than a Lock managerThrows if _keyOwner does not have a valid key\",\"params\":{\"_amount\":\"The amount to refund to the key-owner\",\"_tokenId\":\"The key id we wish to refund to\"}},\"extend(uint256,uint256,address,bytes)\":{\"details\":\"Extend functionThrows if lock is disabled or key does not exist for _recipient. Throws if _recipient == address(0).\",\"params\":{\"_data\":\"arbitrary data populated by the front-end which initiated the sale\",\"_referrer\":\"address of the user making the referral\",\"_tokenId\":\"the id of the key to extend\",\"_value\":\"the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)\"}},\"gasRefundValue()\":{\"details\":\"Returns the value/rpice to be refunded to the sender on purchase\"},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"operator\":\"The approved address for this NFT, or the zero address if there is none\"}},\"getCancelAndRefundValue(uint256)\":{\"details\":\"Determines how much of a refund a key owner would receive if they issued\",\"params\":{\"_tokenId\":\"the id of the token to get the refund value for.\"},\"returns\":{\"refund\":\"the amount of tokens refunded\"}},\"getHasValidKey(address)\":{\"params\":{\"_user\":\"The address of the key owner\"}},\"getTransferFee(uint256,uint256)\":{\"details\":\"Throws if _tokenId does not have a valid key\",\"params\":{\"_time\":\"The amount of time to calculate the fee for.\",\"_tokenId\":\"The id of the key check the transfer fee for.\"},\"returns\":{\"_0\":\"The transfer fee in seconds.\"}},\"grantKeyExtension(uint256,uint256)\":{\"details\":\"set `_duration` to 0 to use the default duration of the lock\",\"params\":{\"_duration\":\"The duration in secondes to add ot the key\",\"_tokenId\":\"The id of the token to extend\"}},\"grantKeys(address[],uint256[],address[])\":{\"details\":\"Throws if called by other than a Lock manager\",\"params\":{\"_expirationTimestamps\":\"An array of expiration Timestamps for the keys being granted\",\"_recipients\":\"An array of receiving addresses\"},\"returns\":{\"_0\":\"the ids of the granted tokens\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given keyManager\",\"params\":{\"_operator\":\"operator address which you want to query the approval of\",\"_owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"isValidKey(uint256)\":{\"params\":{\"_tokenId\":\"the id of the key to check validity\"}},\"keyExpirationTimestampFor(uint256)\":{\"details\":\"Returns the key's ExpirationTimestamp field for a given owner.Returns 0 if the owner has never owned a key for this lock\",\"params\":{\"_tokenId\":\"the id of the key\"}},\"lendKey(address,address,uint256)\":{\"params\":{\"from\":\"the owner of token to transfer\",\"to\":\"the address that will receive the token\",\"tokenId\":\"the id of the token\"}},\"maxKeysPerAddress()\":{\"returns\":{\"_0\":\"the maximum number of key allowed for a single address\"}},\"mergeKeys(uint256,uint256,uint256)\":{\"params\":{\"_amount\":\"the amount of time to transfer (in seconds)\",\"_tokenIdFrom\":\"the id of the token to substract time from\",\"_tokenIdTo\":\"the id of the destination token  to add time\"}},\"migrate(bytes)\":{\"details\":\"when all record schemas are sucessfully upgraded, this function will update the `schemaVersion` variable to the latest/current lock version\",\"params\":{\"_calldata\":\"an ABI-encoded representation of the params (v10: the number of records to migrate as `uint`)\"}},\"onKeyCancelHook()\":{\"returns\":{\"hookAddress\":\"address of the hook\"}},\"onKeyExtendHook()\":{\"returns\":{\"hookAddress\":\"the address ok the hook\"}},\"onKeyGrantHook()\":{\"returns\":{\"hookAddress\":\"the address ok the hook\"}},\"onKeyPurchaseHook()\":{\"returns\":{\"hookAddress\":\"address of the hook\"}},\"onKeyTransferHook()\":{\"returns\":{\"hookAddress\":\"address of the hook\"}},\"onTokenURIHook()\":{\"returns\":{\"hookAddress\":\"address of the hook\"}},\"onValidKeyHook()\":{\"returns\":{\"hookAddress\":\"address of the hook\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the NFT specified by `tokenId`.\"},\"publicLockVersion()\":{\"returns\":{\"_0\":\"The current version number.\"}},\"purchase(uint256[],address[],address[],address[],bytes[])\":{\"details\":\"Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).\",\"params\":{\"_data\":\"array of arbitrary data populated by the front-end which initiated the sale\",\"_keyManagers\":\"optional array of addresses to grant managing rights to a specific address on creation\",\"_recipients\":\"array of addresses of the recipients of the purchased key\",\"_referrers\":\"array of addresses of the users making the referral\",\"_values\":\"array of tokens amount to pay for this purchase >= the current keyPrice - any applicable discount (_values is ignored when using ETH)\"},\"returns\":{\"tokenIds\":\"the ids of the created tokens \"}},\"purchasePriceFor(address,address,bytes)\":{\"details\":\"this considers any discount from Unlock or the OnKeyPurchase hook.\"},\"referrerFees(address)\":{\"params\":{\"_referrer\":\"the address of the referrer\"},\"returns\":{\"referrerFee\":\"the percentage of the keyPrice to be sent to the referrer (in basis points)\"}},\"renewMembershipFor(uint256,address)\":{\"params\":{\"_referrer\":\"the address of the person to be granted UDT\",\"_tokenId\":\"the ID fo the token to renew\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers a specific NFT (`tokenId`) from one account (`from`) to another (`to`). Requirements: - `from`, `to` cannot be zero. - `tokenId` must be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this NFT by either {approve} or {setApprovalForAll}.\"},\"schemaVersion()\":{\"details\":\"will return 0 if no ;igration has ever been run\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"_approved\":\"representing the status of the approval to be set\",\"_operator\":\"operator address to set the approval\"}},\"setEventHooks(address,address,address,address,address,address,address)\":{\"params\":{\"_onKeyCancelHook\":\"Hook called when the internal `_cancelAndRefund` function is called\",\"_onKeyExtendHook\":\"Hook called when a key is extended or renewed\",\"_onKeyGrantHook\":\"Hook called when a key is granted\",\"_onKeyPurchaseHook\":\"Hook called when the `purchase` function is called\",\"_onKeyTransferHook\":\"Hook called when a key is transfered\",\"_onTokenURIHook\":\"Hook called to generate a data URI used for NFT metadata\",\"_onValidKeyHook\":\"Hook called to determine if the contract should overide the status for a given address\"}},\"setGasRefundValue(uint256)\":{\"details\":\"Set the value to be refunded to the sender on purchase\",\"params\":{\"_gasRefundValue\":\"price in wei or token in smallest price unit\"}},\"setKeyManagerOf(uint256,address)\":{\"params\":{\"_keyManager\":\"The address to assign the rights to for the given key\",\"_tokenId\":\"The id of the key to assign rights for\"}},\"setLockMetadata(string,string,string)\":{\"params\":{\"_baseTokenURI\":\"the baseTokenURI for this Lock\",\"_lockName\":\"a descriptive name for this Lock.\",\"_lockSymbol\":\"a Symbol for this Lock (default to KEY).\"}},\"setReferrerFee(address,uint256)\":{\"details\":\"To send a fixed percentage of the key price to all referrers, sett a percentage to `address(0)`\",\"params\":{\"_feeBasisPoint\":\"the percentage of the price to be used for this  specific referrer (in basis points)\",\"_referrer\":\"the address of the referrer\"}},\"shareKey(address,uint256,uint256)\":{\"details\":\"Throws if key is not valid.Throws if `_to` is the zero addressEmit Transfer event\",\"params\":{\"_timeShared\":\"The amount of time shared checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.\",\"_to\":\"The recipient of the shared key\",\"_tokenId\":\"the key to share\"}},\"symbol()\":{\"details\":\"Gets the token symbol\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \\\"ERC721  Metadata JSON Schema\\\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\",\"params\":{\"_tokenId\":\"The tokenID we're inquiring about\"},\"returns\":{\"_0\":\"String representing the URI for the requested token\"}},\"totalKeys(address)\":{\"params\":{\"_keyOwner\":\"address for which we are retrieving the total number of keys\"},\"returns\":{\"numberOfKeys\":\"total number of keys owned by the address\"}},\"transfer(uint256,address,uint256)\":{\"details\":\"The typical use case would be to call this with _value 1, which is on par with calling `transferFrom`. If the user has more than `expirationDuration` time remaining this may use the `shareKey` function to send some but not all of the token.\",\"params\":{\"_to\":\"the recipient of the new token with time\",\"_tokenId\":\"the id of the token to transfer time from\",\"_value\":\"sends a token with _value * expirationDuration (the amount of time remaining on a standard purchase).\"},\"returns\":{\"success\":\"the result of the transfer operation\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Requirements: if the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  The key manager will be reset to address zero after the transfer\",\"params\":{\"from\":\"the owner of token to transfer\",\"to\":\"the address that will receive the token\",\"tokenId\":\"the id of the token\"}},\"unlendKey(address,uint256)\":{\"details\":\"Only the key manager of the token can call this function\",\"params\":{\"_recipient\":\"the address that will receive the token ownership\",\"_tokenId\":\"the id of the token\"}},\"updateKeyPricing(uint256,address)\":{\"details\":\"Throws if called by other than a Lock managerThrows if lock has been disabledThrows if _tokenAddress is not a valid token\",\"params\":{\"_keyPrice\":\"The new price to set for keys\",\"_tokenAddress\":\"The address of the erc20 token to use for pricing the keys, or 0 to use ETH\"}},\"updateLockConfig(uint256,uint256,uint256)\":{\"details\":\"_maxNumberOfKeys Can't be smaller than the existing supply \",\"params\":{\"_maxKeysPerAcccount\":\"the maximum amount of key a single user can own\",\"_maxNumberOfKeys\":\"uint the maximum number of keys\",\"_newExpirationDuration\":\"the new amount of time for each key purchased or type(uint).max for a non-expiring key\"}},\"updateRefundPenalty(uint256,uint256)\":{\"details\":\"Throws if called by other than a Lock manager\",\"params\":{\"_freeTrialLength\":\"The new duration of free trials for this lock\",\"_refundPenaltyBasisPoints\":\"The new refund penaly in basis-points(bps)\"}},\"updateTransferFee(uint256)\":{\"details\":\"Throws if called by other than a Lock manager\",\"params\":{\"_transferFeeBasisPoints\":\"The new transfer fee in basis-points(bps). Ex: 200 bps = 2%\"}},\"withdraw(address,address,uint256)\":{\"details\":\"Called by lock manager to withdraw all funds from the lock\",\"params\":{\"_amount\":\"specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.  -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases.\",\"_recipient\":\"specifies the address that will receive the tokens\",\"_tokenAddress\":\"specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds.\"}}},\"title\":\"The PublicLock Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"In the specific case of a Lock, `balanceOf` returns only the tokens with a valid expiration timerange\"},\"burn(uint256)\":{\"notice\":\"Deactivate an existing keythe key will be expired and ownership records will be destroyed\"},\"gasRefundValue()\":{\"notice\":\"_gasRefundValue price in wei or token in smallest price unit\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"getCancelAndRefundValue(uint256)\":{\"notice\":\"Due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call.\"},\"getHasValidKey(address)\":{\"notice\":\"Checks if the user has a non-expired key.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Innherited from Open Zeppelin AccessControl.sol\"},\"getTransferFee(uint256,uint256)\":{\"notice\":\"Determines how much of a fee would need to be paid in order to transfer to another account.  This is pro-rated so the fee goes  down overtime.\"},\"grantKeyExtension(uint256,uint256)\":{\"notice\":\"Allows the Lock owner to extend an existing keys with no charge.\"},\"grantKeys(address[],uint256[],address[])\":{\"notice\":\"Allows a Lock manager to give a collection of users a key with no charge. Each key may be assigned a different expiration date.\"},\"initialize(address,uint256,address,uint256,uint256,string)\":{\"notice\":\"Functions\"},\"isValidKey(uint256)\":{\"notice\":\"Check if a certain key is validthis makes use of the onValidKeyHook if it is set\"},\"lendKey(address,address,uint256)\":{\"notice\":\"Lending a key allows you to transfer the token while retaining the ownerships right by setting yourself as a key manager first. This function can only be called by 1) the key owner when no key manager is set or 2) the key manager. After calling the function, the `_recipent` will be the new owner, and the sender of the tx will become the key manager.\"},\"mergeKeys(uint256,uint256,uint256)\":{\"notice\":\"Merge existing keys\"},\"migrate(bytes)\":{\"notice\":\"Migrate data from the previous single owner => key mapping to  the new data structure w multiple tokens.\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"numberOfOwners()\":{\"notice\":\"Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply.\"},\"onKeyCancelHook()\":{\"notice\":\"Returns the address of the `onKeyCancelHook` hook.\"},\"onKeyExtendHook()\":{\"notice\":\"Returns the address of the `onKeyExtendHook` hook.\"},\"onKeyGrantHook()\":{\"notice\":\"Returns the address of the `onKeyGrantHook` hook.\"},\"onKeyPurchaseHook()\":{\"notice\":\"Returns the address of the `onKeyPurchaseHook` hook.\"},\"onKeyTransferHook()\":{\"notice\":\"Returns the address of the `onKeyTransferHook` hook.\"},\"onTokenURIHook()\":{\"notice\":\"Returns the address of the `onTokenURIHook` hook.\"},\"onValidKeyHook()\":{\"notice\":\"Returns the address of the `onValidKeyHook` hook.\"},\"owner()\":{\"notice\":\"`owner()` is provided as an helper to mimick the `Ownable` contract ABI. The `Ownable` logic is used by many 3rd party services to determine contract ownership - e.g. who is allowed to edit metadata on Opensea. This logic is NOT used internally by the Unlock Protocol and is made  available only as a convenience helper.\"},\"publicLockVersion()\":{\"notice\":\"The version number of the current implementation on this network.\"},\"purchase(uint256[],address[],address[],address[],bytes[])\":{\"notice\":\"when called for an existing and non-expired key, the `_keyManager` param will be ignored \"},\"purchasePriceFor(address,address,bytes)\":{\"notice\":\"returns the minimum price paid for a purchase with these params.\"},\"referrerFees(address)\":{\"notice\":\"Returns the percentage of the keyPrice to be sent to the referrer (in basis points)\"},\"renewMembershipFor(uint256,address)\":{\"notice\":\"Renew a given tokenonly works for non-free, expiring, ERC20 locks\"},\"schemaVersion()\":{\"notice\":\"Returns the version number of the data schema currently used by the lockif this is different from `publicLockVersion`, then the ability to purchase, grant or extend keys is disabled.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"disabled when transfers are disabled\"},\"setEventHooks(address,address,address,address,address,address,address)\":{\"notice\":\"Allows a Lock manager to add or remove an event hook\"},\"setKeyManagerOf(uint256,address)\":{\"notice\":\"Update transfer and cancel rights for a given key\"},\"setLockMetadata(string,string,string)\":{\"notice\":\"Allows the Lock owner to assign \"},\"setReferrerFee(address,uint256)\":{\"notice\":\"Set a specific percentage of the keyPrice to be sent to the referrer while purchasing,  extending or renewing a key. \"},\"shareKey(address,uint256,uint256)\":{\"notice\":\"Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key).\"},\"supportsInterface(bytes4)\":{\"notice\":\"From ERC165.sol\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"totalKeys(address)\":{\"notice\":\"Returns the number of keys owned by `_keyOwner` (expired or not)\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"an ERC721-like function to transfer a token from one account to another. \"},\"unlendKey(address,uint256)\":{\"notice\":\"Unlend is called when you have lent a key and want to claim its full ownership back. \"},\"updateKeyPricing(uint256,address)\":{\"notice\":\"A function which lets a Lock manager of the lock to change the price for future purchases.\"},\"updateLockConfig(uint256,uint256,uint256)\":{\"notice\":\"Update the main key properties for the entire lock:   - default duration of each key - the maximum number of keys the lock can edit - the maximum number of keys a single address can holdkeys previously bought are unaffected by this changes in expiration duration (i.e. existing keys timestamps are not recalculated/updated)\"},\"updateRefundPenalty(uint256,uint256)\":{\"notice\":\"Allow a Lock manager to change the refund penalty.\"},\"updateSchemaVersion()\":{\"notice\":\"Set the schema version to the latestonly lock manager call call this\"},\"updateTransferFee(uint256)\":{\"notice\":\"Allow a Lock manager to change the transfer fee.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@unlock-protocol/contracts/dist/PublicLock/IPublicLockV12.sol\":\"IPublicLockV12\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@unlock-protocol/contracts/dist/PublicLock/IPublicLockV12.sol\":{\"keccak256\":\"0x2eb51bbb40902800df5120160f1fd006303c8c0026b57dcb2fe97905579a7227\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd41939fe48e7737de577708744b6896e453c2bb41223d01e62d4ba641b1bd6\",\"dweb:/ipfs/QmZNrXYyEt7E5hT3qWcnxXNKx34vgNGd4ePs9eqjzWZjd7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.17 <0.9.0;\npragma experimental ABIEncoderV2;\n\n/**\n* @title The PublicLock Interface\n*/\n\n\ninterface IPublicLockV12\n{\n\n  /// Functions\n  function initialize(\n    address _lockCreator,\n    uint _expirationDuration,\n    address _tokenAddress,\n    uint _keyPrice,\n    uint _maxNumberOfKeys,\n    string calldata _lockName\n  ) external;\n\n\n  // roles\n  function DEFAULT_ADMIN_ROLE() external view returns (bytes32 role);\n  function KEY_GRANTER_ROLE() external view returns (bytes32 role);\n  function LOCK_MANAGER_ROLE() external view returns (bytes32 role);\n\n  /**\n  * @notice The version number of the current implementation on this network.\n  * @return The current version number.\n  */\n  function publicLockVersion() external pure returns (uint16);\n\n  /**\n   * @dev Called by lock manager to withdraw all funds from the lock\n   * @param _tokenAddress specifies the token address to withdraw or 0 for ETH. This is usually\n   * the same as `tokenAddress` in MixinFunds.\n   * @param _recipient specifies the address that will receive the tokens\n   * @param _amount specifies the max amount to withdraw, which may be reduced when\n   * considering the available balance. Set to 0 or MAX_UINT to withdraw everything. \n   * -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases.\n   */\n  function withdraw(\n    address _tokenAddress,\n    address payable _recipient,\n    uint _amount\n  ) external;\n\n  /**\n   * A function which lets a Lock manager of the lock to change the price for future purchases.\n   * @dev Throws if called by other than a Lock manager\n   * @dev Throws if lock has been disabled\n   * @dev Throws if _tokenAddress is not a valid token\n   * @param _keyPrice The new price to set for keys\n   * @param _tokenAddress The address of the erc20 token to use for pricing the keys,\n   * or 0 to use ETH\n   */\n  function updateKeyPricing( uint _keyPrice, address _tokenAddress ) external;\n\n  /**\n   * Update the main key properties for the entire lock: \n   * \n   * - default duration of each key\n   * - the maximum number of keys the lock can edit\n   * - the maximum number of keys a single address can hold\n   *\n   * @notice keys previously bought are unaffected by this changes in expiration duration (i.e.\n   * existing keys timestamps are not recalculated/updated)\n   * @param _newExpirationDuration the new amount of time for each key purchased or type(uint).max for a non-expiring key\n   * @param _maxKeysPerAcccount the maximum amount of key a single user can own\n   * @param _maxNumberOfKeys uint the maximum number of keys\n   * @dev _maxNumberOfKeys Can't be smaller than the existing supply \n   */\n   function updateLockConfig(\n    uint _newExpirationDuration,\n    uint _maxNumberOfKeys,\n    uint _maxKeysPerAcccount\n  ) external;\n\n  /**\n   * Checks if the user has a non-expired key.\n   * @param _user The address of the key owner\n   */\n  function getHasValidKey(\n    address _user\n  ) external view returns (bool);\n\n  /**\n  * @dev Returns the key's ExpirationTimestamp field for a given owner.\n  * @param _tokenId the id of the key\n  * @dev Returns 0 if the owner has never owned a key for this lock\n  */\n  function keyExpirationTimestampFor(\n    uint _tokenId\n  ) external view returns (uint timestamp);\n  \n  /**\n   * Public function which returns the total number of unique owners (both expired\n   * and valid).  This may be larger than totalSupply.\n   */\n  function numberOfOwners() external view returns (uint);\n\n  /**\n   * Allows the Lock owner to assign \n   * @param _lockName a descriptive name for this Lock.\n   * @param _lockSymbol a Symbol for this Lock (default to KEY).\n   * @param _baseTokenURI the baseTokenURI for this Lock\n   */\n  function setLockMetadata(\n    string calldata _lockName,\n    string calldata _lockSymbol,\n    string calldata _baseTokenURI\n  ) external;\n\n  /**\n   * @dev Gets the token symbol\n   * @return string representing the token symbol\n   */\n  function symbol() external view returns(string memory);\n\n\n  /**  @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n   * @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n   *  3986. The URI may point to a JSON file that conforms to the \"ERC721\n   *  Metadata JSON Schema\".\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n   * @param _tokenId The tokenID we're inquiring about\n   * @return String representing the URI for the requested token\n   */\n  function tokenURI(\n    uint256 _tokenId\n  ) external view returns(string memory);\n\n  /**\n   * Allows a Lock manager to add or remove an event hook\n   * @param _onKeyPurchaseHook Hook called when the `purchase` function is called\n   * @param _onKeyCancelHook Hook called when the internal `_cancelAndRefund` function is called\n   * @param _onValidKeyHook Hook called to determine if the contract should overide the status for a given address\n   * @param _onTokenURIHook Hook called to generate a data URI used for NFT metadata\n   * @param _onKeyTransferHook Hook called when a key is transfered\n   * @param _onKeyExtendHook Hook called when a key is extended or renewed\n   * @param _onKeyGrantHook Hook called when a key is granted\n   */\n  function setEventHooks(\n    address _onKeyPurchaseHook,\n    address _onKeyCancelHook,\n    address _onValidKeyHook,\n    address _onTokenURIHook,\n    address _onKeyTransferHook,\n    address _onKeyExtendHook,\n    address _onKeyGrantHook\n  ) external;\n\n  /**\n   * Allows a Lock manager to give a collection of users a key with no charge.\n   * Each key may be assigned a different expiration date.\n   * @dev Throws if called by other than a Lock manager\n   * @param _recipients An array of receiving addresses\n   * @param _expirationTimestamps An array of expiration Timestamps for the keys being granted\n   * @return the ids of the granted tokens\n   */\n  function grantKeys(\n    address[] calldata _recipients,\n    uint[] calldata _expirationTimestamps,\n    address[] calldata _keyManagers\n  ) external returns (uint256[] memory);\n\n  /**\n   * Allows the Lock owner to extend an existing keys with no charge.\n   * @param _tokenId The id of the token to extend\n   * @param _duration The duration in secondes to add ot the key\n   * @dev set `_duration` to 0 to use the default duration of the lock\n   */\n  function grantKeyExtension(uint _tokenId, uint _duration) external;\n\n  /**\n  * @dev Purchase function\n  * @param _values array of tokens amount to pay for this purchase >= the current keyPrice - any applicable discount\n  * (_values is ignored when using ETH)\n  * @param _recipients array of addresses of the recipients of the purchased key\n  * @param _referrers array of addresses of the users making the referral\n  * @param _keyManagers optional array of addresses to grant managing rights to a specific address on creation\n  * @param _data array of arbitrary data populated by the front-end which initiated the sale\n  * @notice when called for an existing and non-expired key, the `_keyManager` param will be ignored \n  * @dev Setting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the\n  * price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more\n  * than keyPrice is approved for spending).\n  * @return tokenIds the ids of the created tokens \n  */\n  function purchase(\n    uint256[] calldata _values,\n    address[] calldata _recipients,\n    address[] calldata _referrers,\n    address[] calldata _keyManagers,\n    bytes[] calldata _data\n  ) external payable returns (uint256[] memory tokenIds);\n  \n  /**\n  * @dev Extend function\n  * @param _value the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount\n  * (_value is ignored when using ETH)\n  * @param _tokenId the id of the key to extend\n  * @param _referrer address of the user making the referral\n  * @param _data arbitrary data populated by the front-end which initiated the sale\n  * @dev Throws if lock is disabled or key does not exist for _recipient. Throws if _recipient == address(0).\n  */\n  function extend(\n    uint _value,\n    uint _tokenId,\n    address _referrer,\n    bytes calldata _data\n  ) external payable;\n\n\n  /**\n  * Returns the percentage of the keyPrice to be sent to the referrer (in basis points)\n  * @param _referrer the address of the referrer\n  * @return referrerFee the percentage of the keyPrice to be sent to the referrer (in basis points)\n  */\n  function referrerFees(address _referrer) external view returns (uint referrerFee);\n  \n  /**\n  * Set a specific percentage of the keyPrice to be sent to the referrer while purchasing, \n  * extending or renewing a key. \n  * @param _referrer the address of the referrer\n  * @param _feeBasisPoint the percentage of the price to be used for this \n  * specific referrer (in basis points)\n  * @dev To send a fixed percentage of the key price to all referrers, sett a percentage to `address(0)`\n  */\n  function setReferrerFee(address _referrer, uint _feeBasisPoint) external;\n\n  /**\n   * Merge existing keys\n   * @param _tokenIdFrom the id of the token to substract time from\n   * @param _tokenIdTo the id of the destination token  to add time\n   * @param _amount the amount of time to transfer (in seconds)\n   */\n  function mergeKeys(uint _tokenIdFrom, uint _tokenIdTo, uint _amount) external;\n\n  /**\n   * Deactivate an existing key\n   * @param _tokenId the id of token to burn\n   * @notice the key will be expired and ownership records will be destroyed\n   */\n  function burn(uint _tokenId) external;\n\n  /**\n  * @param _gasRefundValue price in wei or token in smallest price unit\n  * @dev Set the value to be refunded to the sender on purchase\n  */\n  function setGasRefundValue(uint256 _gasRefundValue) external;\n  \n  /**\n  * _gasRefundValue price in wei or token in smallest price unit\n  * @dev Returns the value/rpice to be refunded to the sender on purchase\n  */\n  function gasRefundValue() external view returns (uint256 _gasRefundValue);\n\n  /**\n   * @notice returns the minimum price paid for a purchase with these params.\n   * @dev this considers any discount from Unlock or the OnKeyPurchase hook.\n   */\n  function purchasePriceFor(\n    address _recipient,\n    address _referrer,\n    bytes calldata _data\n  ) external view\n    returns (uint);\n\n  /**\n   * Allow a Lock manager to change the transfer fee.\n   * @dev Throws if called by other than a Lock manager\n   * @param _transferFeeBasisPoints The new transfer fee in basis-points(bps).\n   * Ex: 200 bps = 2%\n   */\n  function updateTransferFee(\n    uint _transferFeeBasisPoints\n  ) external;\n\n  /**\n   * Determines how much of a fee would need to be paid in order to\n   * transfer to another account.  This is pro-rated so the fee goes \n   * down overtime.\n   * @dev Throws if _tokenId does not have a valid key\n   * @param _tokenId The id of the key check the transfer fee for.\n   * @param _time The amount of time to calculate the fee for.\n   * @return The transfer fee in seconds.\n   */\n  function getTransferFee(\n    uint _tokenId,\n    uint _time\n  ) external view returns (uint);\n\n  /**\n   * @dev Invoked by a Lock manager to expire the user's key \n   * and perform a refund and cancellation of the key\n   * @param _tokenId The key id we wish to refund to\n   * @param _amount The amount to refund to the key-owner\n   * @dev Throws if called by other than a Lock manager\n   * @dev Throws if _keyOwner does not have a valid key\n   */\n  function expireAndRefundFor(\n    uint _tokenId,\n    uint _amount\n  ) external;\n\n   /**\n   * @dev allows the key manager to expire a given tokenId\n   * and send a refund to the keyOwner based on the amount of time remaining.\n   * @param _tokenId The id of the key to cancel.\n   */\n  function cancelAndRefund(uint _tokenId) external;\n\n  /**\n   * Allow a Lock manager to change the refund penalty.\n   * @dev Throws if called by other than a Lock manager\n   * @param _freeTrialLength The new duration of free trials for this lock\n   * @param _refundPenaltyBasisPoints The new refund penaly in basis-points(bps)\n   */\n  function updateRefundPenalty(\n    uint _freeTrialLength,\n    uint _refundPenaltyBasisPoints\n  ) external;\n\n  /**\n   * @dev Determines how much of a refund a key owner would receive if they issued\n   * @param _tokenId the id of the token to get the refund value for.\n   * @notice Due to the time required to mine a tx, the actual refund amount will be lower\n   * than what the user reads from this call.\n   * @return refund the amount of tokens refunded\n   */\n  function getCancelAndRefundValue(\n    uint _tokenId\n  ) external view returns (uint refund);\n\n  function addKeyGranter(address account) external;\n\n  function addLockManager(address account) external;\n\n  function isKeyGranter(address account) external view returns (bool);\n\n  function isLockManager(address account) external view returns (bool);\n\n  \n /**\n   * Returns the address of the `onKeyPurchaseHook` hook.\n   * @return hookAddress address of the hook\n   */  \n  function onKeyPurchaseHook() external view returns(address hookAddress);\n\n  /**\n   * Returns the address of the `onKeyCancelHook` hook.\n   * @return hookAddress address of the hook\n   */  \n  function onKeyCancelHook() external view returns(address hookAddress);\n\n  /**\n   * Returns the address of the `onValidKeyHook` hook.\n   * @return hookAddress address of the hook\n   */  \n  function onValidKeyHook() external view returns(address hookAddress);\n\n  /**\n   * Returns the address of the `onTokenURIHook` hook.\n   * @return hookAddress address of the hook\n   */\n  function onTokenURIHook() external view returns(address hookAddress);\n  \n  /**\n   * Returns the address of the `onKeyTransferHook` hook.\n   * @return hookAddress address of the hook\n   */\n  function onKeyTransferHook() external view returns(address hookAddress);\n  \n  /**\n   * Returns the address of the `onKeyExtendHook` hook.\n  * @return hookAddress the address ok the hook\n  */\n  function onKeyExtendHook() external view returns(address hookAddress);\n\n  /**\n  * Returns the address of the `onKeyGrantHook` hook.\n  * @return hookAddress the address ok the hook\n  */\n  function onKeyGrantHook() external view returns(address hookAddress);\n\n  function revokeKeyGranter(address _granter) external;\n\n  function renounceLockManager() external;\n\n  /**\n   * @return the maximum number of key allowed for a single address\n   */\n  function maxKeysPerAddress() external view returns (uint);\n\n  function expirationDuration() external view returns (uint256 );\n\n  function freeTrialLength() external view returns (uint256 );\n\n  function keyPrice() external view returns (uint256 );\n\n  function maxNumberOfKeys() external view returns (uint256 );\n\n  function refundPenaltyBasisPoints() external view returns (uint256 );\n\n  function tokenAddress() external view returns (address );\n\n  function transferFeeBasisPoints() external view returns (uint256 );\n\n  function unlockProtocol() external view returns (address );\n\n  function keyManagerOf(uint) external view returns (address );\n\n  ///===================================================================\n\n  /**\n  * @notice Allows the key owner to safely share their key (parent key) by\n  * transferring a portion of the remaining time to a new key (child key).\n  * @dev Throws if key is not valid.\n  * @dev Throws if `_to` is the zero address\n  * @param _to The recipient of the shared key\n  * @param _tokenId the key to share\n  * @param _timeShared The amount of time shared\n  * checks if `_to` is a smart contract (code size > 0). If so, it calls\n  * `onERC721Received` on `_to` and throws if the return value is not\n  * `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.\n  * @dev Emit Transfer event\n  */\n  function shareKey(\n    address _to,\n    uint _tokenId,\n    uint _timeShared\n  ) external;\n\n  /**\n  * @notice Update transfer and cancel rights for a given key\n  * @param _tokenId The id of the key to assign rights for\n  * @param _keyManager The address to assign the rights to for the given key\n  */\n  function setKeyManagerOf(\n    uint _tokenId,\n    address _keyManager\n  ) external;\n  \n  /**\n  * Check if a certain key is valid\n  * @param _tokenId the id of the key to check validity\n  * @notice this makes use of the onValidKeyHook if it is set\n  */\n  function isValidKey(\n    uint _tokenId\n  )\n    external\n    view\n    returns (bool);\n  \n  /**\n   * Returns the number of keys owned by `_keyOwner` (expired or not)\n   * @param _keyOwner address for which we are retrieving the total number of keys\n   * @return numberOfKeys total number of keys owned by the address\n   */\n  function totalKeys(address _keyOwner) external view returns (uint numberOfKeys);\n  \n  /// @notice A descriptive name for a collection of NFTs in this contract\n  function name() external view returns (string memory _name);\n  ///===================================================================\n\n  /// From ERC165.sol\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\n  ///===================================================================\n\n  /// From ERC-721\n  /**\n   * In the specific case of a Lock, `balanceOf` returns only the tokens with a valid expiration timerange\n   * @return balance The number of valid keys owned by `_keyOwner`\n  */\n  function balanceOf(address _owner) external view returns (uint256 balance);\n\n  /**\n    * @dev Returns the owner of the NFT specified by `tokenId`.\n    */\n  function ownerOf(uint256 tokenId) external view returns (address _owner);\n\n  /**\n    * @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\n    * another (`to`).\n    *\n    * Requirements:\n    * - `from`, `to` cannot be zero.\n    * - `tokenId` must be owned by `from`.\n    * - If the caller is not `from`, it must be have been allowed to move this\n    * NFT by either {approve} or {setApprovalForAll}.\n    */\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\n  \n  /** \n  * an ERC721-like function to transfer a token from one account to another. \n  * @param from the owner of token to transfer\n  * @param to the address that will receive the token\n  * @param tokenId the id of the token\n  * @dev Requirements: if the caller is not `from`, it must be approved to move this token by\n  * either {approve} or {setApprovalForAll}. \n  * The key manager will be reset to address zero after the transfer\n  */\n  function transferFrom(address from, address to, uint256 tokenId) external;\n\n  /** \n  * Lending a key allows you to transfer the token while retaining the\n  * ownerships right by setting yourself as a key manager first. \n  * @param from the owner of token to transfer\n  * @param to the address that will receive the token\n  * @param tokenId the id of the token\n  * @notice This function can only be called by 1) the key owner when no key manager is set or 2) the key manager.\n  * After calling the function, the `_recipent` will be the new owner, and the sender of the tx\n  * will become the key manager.\n  */\n  function lendKey(address from, address to, uint tokenId) external;\n\n  /** \n  * Unlend is called when you have lent a key and want to claim its full ownership back. \n  * @param _recipient the address that will receive the token ownership\n  * @param _tokenId the id of the token\n  * @dev Only the key manager of the token can call this function\n  */\n  function unlendKey(address _recipient, uint _tokenId) external;\n\n  function approve(address to, uint256 tokenId) external;\n\n  /**\n  * @notice Get the approved address for a single NFT\n  * @dev Throws if `_tokenId` is not a valid NFT.\n  * @param _tokenId The NFT to find the approved address for\n  * @return operator The approved address for this NFT, or the zero address if there is none\n  */\n  function getApproved(uint256 _tokenId) external view returns (address operator);\n\n   /**\n   * @dev Sets or unsets the approval of a given operator\n   * An operator is allowed to transfer all tokens of the sender on their behalf\n   * @param _operator operator address to set the approval\n   * @param _approved representing the status of the approval to be set\n   * @notice disabled when transfers are disabled\n   */\n  function setApprovalForAll(address _operator, bool _approved) external;\n\n   /**\n   * @dev Tells whether an operator is approved by a given keyManager\n   * @param _owner owner address which you want to query the approval of\n   * @param _operator operator address which you want to query the approval of\n   * @return bool whether the given operator is approved by the given owner\n   */\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n\n  function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n  function totalSupply() external view returns (uint256);\n  function tokenOfOwnerByIndex(address _owner, uint256 index) external view returns (uint256 tokenId);\n\n  function tokenByIndex(uint256 index) external view returns (uint256);\n\n  /**\n    * Innherited from Open Zeppelin AccessControl.sol\n    */\n  function getRoleAdmin(bytes32 role) external view returns (bytes32);\n  function grantRole(bytes32 role, address account) external;\n  function revokeRole(bytes32 role, address account) external;\n  function renounceRole(bytes32 role, address account) external;\n  function hasRole(bytes32 role, address account) external view returns (bool);\n\n  /**\n    * @param _tokenId the id of the token to transfer time from\n    * @param _to the recipient of the new token with time\n    * @param _value sends a token with _value * expirationDuration (the amount of time remaining on a standard purchase).\n    * @dev The typical use case would be to call this with _value 1, which is on par with calling `transferFrom`. If the user\n    * has more than `expirationDuration` time remaining this may use the `shareKey` function to send some but not all of the token.\n    * @return success the result of the transfer operation\n    */\n  function transfer(\n    uint _tokenId,\n    address _to,\n    uint _value\n  ) external\n    returns (bool success);\n\n  /** `owner()` is provided as an helper to mimick the `Ownable` contract ABI.\n    * The `Ownable` logic is used by many 3rd party services to determine\n    * contract ownership - e.g. who is allowed to edit metadata on Opensea.\n    * \n    * @notice This logic is NOT used internally by the Unlock Protocol and is made \n    * available only as a convenience helper.\n    */\n  function owner() external view returns (address owner);\n  function setOwner(address account) external;\n  function isOwner(address account) view external returns (bool isOwner);\n\n  /**\n  * Migrate data from the previous single owner => key mapping to \n  * the new data structure w multiple tokens.\n  * @param _calldata an ABI-encoded representation of the params (v10: the number of records to migrate as `uint`)\n  * @dev when all record schemas are sucessfully upgraded, this function will update the `schemaVersion`\n  * variable to the latest/current lock version\n  */\n  function migrate(bytes calldata _calldata) external;\n\n  /**\n  * Returns the version number of the data schema currently used by the lock\n  * @notice if this is different from `publicLockVersion`, then the ability to purchase, grant\n  * or extend keys is disabled.\n  * @dev will return 0 if no ;igration has ever been run\n  */\n  function schemaVersion() external view returns (uint);\n\n  /**\n   * Set the schema version to the latest\n   * @notice only lock manager call call this\n   */\n  function updateSchemaVersion() external;\n\n    /**\n  * Renew a given token\n  * @notice only works for non-free, expiring, ERC20 locks\n  * @param _tokenId the ID fo the token to renew\n  * @param _referrer the address of the person to be granted UDT\n  */\n  function renewMembershipFor(\n    uint _tokenId,\n    address _referrer\n  ) external;\n}\n",
  "sourcePath": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV12.sol",
  "ast": {
    "absolutePath": "@unlock-protocol/contracts/dist/PublicLock/IPublicLockV12.sol",
    "exportedSymbols": {
      "IPublicLockV12": [
        3098
      ]
    },
    "id": 3099,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2420,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".17",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:12"
      },
      {
        "id": 2421,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:33:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPublicLockV12",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2422,
          "nodeType": "StructuredDocumentation",
          "src": "100:40:12",
          "text": " @title The PublicLock Interface"
        },
        "fullyImplemented": false,
        "id": 3098,
        "linearizedBaseContracts": [
          3098
        ],
        "name": "IPublicLockV12",
        "nameLocation": "153:14:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2423,
              "nodeType": "StructuredDocumentation",
              "src": "173:13:12",
              "text": "Functions"
            },
            "functionSelector": "6eadde43",
            "id": 2438,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "198:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2425,
                  "mutability": "mutable",
                  "name": "_lockCreator",
                  "nameLocation": "222:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "214:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "_expirationDuration",
                  "nameLocation": "245:19:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "240:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "240:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "278:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "270:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "_keyPrice",
                  "nameLocation": "302:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "297:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "_maxNumberOfKeys",
                  "nameLocation": "322:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "317:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2435,
                  "mutability": "mutable",
                  "name": "_lockName",
                  "nameLocation": "360:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "344:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "208:165:12"
            },
            "returnParameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:12"
            },
            "scope": 3098,
            "src": "189:194:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a217fddf",
            "id": 2443,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "nameLocation": "408:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:2:12"
            },
            "returnParameters": {
              "id": 2442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2441,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "460:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2443,
                  "src": "452:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2440,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:14:12"
            },
            "scope": 3098,
            "src": "399:67:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23100509",
            "id": 2448,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "KEY_GRANTER_ROLE",
            "nameLocation": "478:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:12"
            },
            "returnParameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "528:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "520:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:14:12"
            },
            "scope": 3098,
            "src": "469:65:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8ca2fbad",
            "id": 2453,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "LOCK_MANAGER_ROLE",
            "nameLocation": "546:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:12"
            },
            "returnParameters": {
              "id": 2452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2451,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "597:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "589:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:14:12"
            },
            "scope": 3098,
            "src": "537:66:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2454,
              "nodeType": "StructuredDocumentation",
              "src": "607:126:12",
              "text": " @notice The version number of the current implementation on this network.\n @return The current version number."
            },
            "functionSelector": "d1bbd49c",
            "id": 2459,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "publicLockVersion",
            "nameLocation": "745:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:2:12"
            },
            "returnParameters": {
              "id": 2458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2459,
                  "src": "788:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2456,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:8:12"
            },
            "scope": 3098,
            "src": "736:60:12",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2460,
              "nodeType": "StructuredDocumentation",
              "src": "800:578:12",
              "text": " @dev Called by lock manager to withdraw all funds from the lock\n @param _tokenAddress specifies the token address to withdraw or 0 for ETH. This is usually\n the same as `tokenAddress` in MixinFunds.\n @param _recipient specifies the address that will receive the tokens\n @param _amount specifies the max amount to withdraw, which may be reduced when\n considering the available balance. Set to 0 or MAX_UINT to withdraw everything. \n -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases."
            },
            "functionSelector": "d9caed12",
            "id": 2469,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1390:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1412:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2469,
                  "src": "1404:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2464,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "1447:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2469,
                  "src": "1431:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:15:12",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2466,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1468:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2469,
                  "src": "1463:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:81:12"
            },
            "returnParameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:0:12"
            },
            "scope": 3098,
            "src": "1381:108:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2470,
              "nodeType": "StructuredDocumentation",
              "src": "1493:418:12",
              "text": " A function which lets a Lock manager of the lock to change the price for future purchases.\n @dev Throws if called by other than a Lock manager\n @dev Throws if lock has been disabled\n @dev Throws if _tokenAddress is not a valid token\n @param _keyPrice The new price to set for keys\n @param _tokenAddress The address of the erc20 token to use for pricing the keys,\n or 0 to use ETH"
            },
            "functionSelector": "a2e4cd2e",
            "id": 2477,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateKeyPricing",
            "nameLocation": "1923:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2472,
                  "mutability": "mutable",
                  "name": "_keyPrice",
                  "nameLocation": "1946:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2477,
                  "src": "1941:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2471,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1965:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2477,
                  "src": "1957:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1939:41:12"
            },
            "returnParameters": {
              "id": 2476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:12"
            },
            "scope": 3098,
            "src": "1914:76:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2478,
              "nodeType": "StructuredDocumentation",
              "src": "1994:715:12",
              "text": " Update the main key properties for the entire lock: \n \n - default duration of each key\n - the maximum number of keys the lock can edit\n - the maximum number of keys a single address can hold\n @notice keys previously bought are unaffected by this changes in expiration duration (i.e.\n existing keys timestamps are not recalculated/updated)\n @param _newExpirationDuration the new amount of time for each key purchased or type(uint).max for a non-expiring key\n @param _maxKeysPerAcccount the maximum amount of key a single user can own\n @param _maxNumberOfKeys uint the maximum number of keys\n @dev _maxNumberOfKeys Can't be smaller than the existing supply "
            },
            "functionSelector": "282478df",
            "id": 2487,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateLockConfig",
            "nameLocation": "2722:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2480,
                  "mutability": "mutable",
                  "name": "_newExpirationDuration",
                  "nameLocation": "2749:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2487,
                  "src": "2744:27:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "_maxNumberOfKeys",
                  "nameLocation": "2782:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2487,
                  "src": "2777:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2484,
                  "mutability": "mutable",
                  "name": "_maxKeysPerAcccount",
                  "nameLocation": "2809:19:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2487,
                  "src": "2804:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2738:94:12"
            },
            "returnParameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2841:0:12"
            },
            "scope": 3098,
            "src": "2713:129:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2488,
              "nodeType": "StructuredDocumentation",
              "src": "2846:103:12",
              "text": " Checks if the user has a non-expired key.\n @param _user The address of the key owner"
            },
            "functionSelector": "6d8ea5b4",
            "id": 2495,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getHasValidKey",
            "nameLocation": "2961:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2989:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "2981:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2981:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2975:23:12"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2495,
                  "src": "3022:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3022:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3021:6:12"
            },
            "scope": 3098,
            "src": "2952:76:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2496,
              "nodeType": "StructuredDocumentation",
              "src": "3032:186:12",
              "text": " @dev Returns the key's ExpirationTimestamp field for a given owner.\n @param _tokenId the id of the key\n @dev Returns 0 if the owner has never owned a key for this lock"
            },
            "functionSelector": "54b249fb",
            "id": 2503,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "keyExpirationTimestampFor",
            "nameLocation": "3230:25:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3266:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3261:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3255:23:12"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3307:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "3302:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3301:16:12"
            },
            "scope": 3098,
            "src": "3221:97:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2504,
              "nodeType": "StructuredDocumentation",
              "src": "3324:147:12",
              "text": " Public function which returns the total number of unique owners (both expired\n and valid).  This may be larger than totalSupply."
            },
            "functionSelector": "93fd1844",
            "id": 2509,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfOwners",
            "nameLocation": "3483:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:2:12"
            },
            "returnParameters": {
              "id": 2508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2509,
                  "src": "3523:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3522:6:12"
            },
            "scope": 3098,
            "src": "3474:55:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2510,
              "nodeType": "StructuredDocumentation",
              "src": "3533:225:12",
              "text": " Allows the Lock owner to assign \n @param _lockName a descriptive name for this Lock.\n @param _lockSymbol a Symbol for this Lock (default to KEY).\n @param _baseTokenURI the baseTokenURI for this Lock"
            },
            "functionSelector": "d1b8759b",
            "id": 2519,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLockMetadata",
            "nameLocation": "3770:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2512,
                  "mutability": "mutable",
                  "name": "_lockName",
                  "nameLocation": "3807:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "3791:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2511,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "_lockSymbol",
                  "nameLocation": "3838:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "3822:27:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2516,
                  "mutability": "mutable",
                  "name": "_baseTokenURI",
                  "nameLocation": "3871:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2519,
                  "src": "3855:29:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3855:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3785:103:12"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3897:0:12"
            },
            "scope": 3098,
            "src": "3761:137:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2520,
              "nodeType": "StructuredDocumentation",
              "src": "3902:91:12",
              "text": " @dev Gets the token symbol\n @return string representing the token symbol"
            },
            "functionSelector": "95d89b41",
            "id": 2525,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "4005:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4011:2:12"
            },
            "returnParameters": {
              "id": 2524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2523,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2525,
                  "src": "4036:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4035:15:12"
            },
            "scope": 3098,
            "src": "3996:55:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2526,
              "nodeType": "StructuredDocumentation",
              "src": "4056:446:12",
              "text": "@notice A distinct Uniform Resource Identifier (URI) for a given asset.\n @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n  3986. The URI may point to a JSON file that conforms to the \"ERC721\n  Metadata JSON Schema\".\n https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n @param _tokenId The tokenID we're inquiring about\n @return String representing the URI for the requested token"
            },
            "functionSelector": "c87b56dd",
            "id": 2533,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4514:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4536:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "4528:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4522:26:12"
            },
            "returnParameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "4571:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4570:15:12"
            },
            "scope": 3098,
            "src": "4505:81:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2534,
              "nodeType": "StructuredDocumentation",
              "src": "4590:651:12",
              "text": " Allows a Lock manager to add or remove an event hook\n @param _onKeyPurchaseHook Hook called when the `purchase` function is called\n @param _onKeyCancelHook Hook called when the internal `_cancelAndRefund` function is called\n @param _onValidKeyHook Hook called to determine if the contract should overide the status for a given address\n @param _onTokenURIHook Hook called to generate a data URI used for NFT metadata\n @param _onKeyTransferHook Hook called when a key is transfered\n @param _onKeyExtendHook Hook called when a key is extended or renewed\n @param _onKeyGrantHook Hook called when a key is granted"
            },
            "functionSelector": "74cac47d",
            "id": 2551,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setEventHooks",
            "nameLocation": "5253:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2536,
                  "mutability": "mutable",
                  "name": "_onKeyPurchaseHook",
                  "nameLocation": "5280:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5272:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "_onKeyCancelHook",
                  "nameLocation": "5312:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5304:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5304:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2540,
                  "mutability": "mutable",
                  "name": "_onValidKeyHook",
                  "nameLocation": "5342:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5334:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2542,
                  "mutability": "mutable",
                  "name": "_onTokenURIHook",
                  "nameLocation": "5371:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5363:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "_onKeyTransferHook",
                  "nameLocation": "5400:18:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5392:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5392:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2546,
                  "mutability": "mutable",
                  "name": "_onKeyExtendHook",
                  "nameLocation": "5432:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5424:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5424:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2548,
                  "mutability": "mutable",
                  "name": "_onKeyGrantHook",
                  "nameLocation": "5462:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2551,
                  "src": "5454:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5266:215:12"
            },
            "returnParameters": {
              "id": 2550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5490:0:12"
            },
            "scope": 3098,
            "src": "5244:247:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2552,
              "nodeType": "StructuredDocumentation",
              "src": "5495:397:12",
              "text": " Allows a Lock manager to give a collection of users a key with no charge.\n Each key may be assigned a different expiration date.\n @dev Throws if called by other than a Lock manager\n @param _recipients An array of receiving addresses\n @param _expirationTimestamps An array of expiration Timestamps for the keys being granted\n @return the ids of the granted tokens"
            },
            "functionSelector": "81a3c943",
            "id": 2567,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantKeys",
            "nameLocation": "5904:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "_recipients",
                  "nameLocation": "5938:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "5919:30:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2553,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5919:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2554,
                    "nodeType": "ArrayTypeName",
                    "src": "5919:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2558,
                  "mutability": "mutable",
                  "name": "_expirationTimestamps",
                  "nameLocation": "5971:21:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "5955:37:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2556,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5955:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2557,
                    "nodeType": "ArrayTypeName",
                    "src": "5955:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "_keyManagers",
                  "nameLocation": "6017:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "5998:31:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2559,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5998:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2560,
                    "nodeType": "ArrayTypeName",
                    "src": "5998:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5913:120:12"
            },
            "returnParameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2567,
                  "src": "6052:16:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2563,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6052:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2564,
                    "nodeType": "ArrayTypeName",
                    "src": "6052:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6051:18:12"
            },
            "scope": 3098,
            "src": "5895:175:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2568,
              "nodeType": "StructuredDocumentation",
              "src": "6074:266:12",
              "text": " Allows the Lock owner to extend an existing keys with no charge.\n @param _tokenId The id of the token to extend\n @param _duration The duration in secondes to add ot the key\n @dev set `_duration` to 0 to use the default duration of the lock"
            },
            "functionSelector": "4cd38c1d",
            "id": 2575,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantKeyExtension",
            "nameLocation": "6352:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6375:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2575,
                  "src": "6370:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6370:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2572,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "6390:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2575,
                  "src": "6385:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6385:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6369:31:12"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6409:0:12"
            },
            "scope": 3098,
            "src": "6343:67:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2576,
              "nodeType": "StructuredDocumentation",
              "src": "6414:985:12",
              "text": " @dev Purchase function\n @param _values array of tokens amount to pay for this purchase >= the current keyPrice - any applicable discount\n (_values is ignored when using ETH)\n @param _recipients array of addresses of the recipients of the purchased key\n @param _referrers array of addresses of the users making the referral\n @param _keyManagers optional array of addresses to grant managing rights to a specific address on creation\n @param _data array of arbitrary data populated by the front-end which initiated the sale\n @notice when called for an existing and non-expired key, the `_keyManager` param will be ignored \n @dev Setting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the\n price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more\n than keyPrice is approved for spending).\n @return tokenIds the ids of the created tokens "
            },
            "functionSelector": "33818997",
            "id": 2597,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nameLocation": "7411:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2579,
                  "mutability": "mutable",
                  "name": "_values",
                  "nameLocation": "7444:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7425:26:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2577,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7425:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2578,
                    "nodeType": "ArrayTypeName",
                    "src": "7425:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2582,
                  "mutability": "mutable",
                  "name": "_recipients",
                  "nameLocation": "7476:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7457:30:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2580,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7457:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2581,
                    "nodeType": "ArrayTypeName",
                    "src": "7457:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "_referrers",
                  "nameLocation": "7512:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7493:29:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2583,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7493:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2584,
                    "nodeType": "ArrayTypeName",
                    "src": "7493:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2588,
                  "mutability": "mutable",
                  "name": "_keyManagers",
                  "nameLocation": "7547:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7528:31:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2586,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7528:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2587,
                    "nodeType": "ArrayTypeName",
                    "src": "7528:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "7582:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7565:22:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2589,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "7565:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 2590,
                    "nodeType": "ArrayTypeName",
                    "src": "7565:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7419:172:12"
            },
            "returnParameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2595,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "7635:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "7618:25:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2593,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7618:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2594,
                    "nodeType": "ArrayTypeName",
                    "src": "7618:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7617:27:12"
            },
            "scope": 3098,
            "src": "7402:243:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2598,
              "nodeType": "StructuredDocumentation",
              "src": "7651:489:12",
              "text": " @dev Extend function\n @param _value the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount\n (_value is ignored when using ETH)\n @param _tokenId the id of the key to extend\n @param _referrer address of the user making the referral\n @param _data arbitrary data populated by the front-end which initiated the sale\n @dev Throws if lock is disabled or key does not exist for _recipient. Throws if _recipient == address(0)."
            },
            "functionSelector": "d813cc19",
            "id": 2609,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extend",
            "nameLocation": "8152:6:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2600,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "8169:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "8164:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2599,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8164:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2602,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8186:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "8181:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2604,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "8208:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "8200:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8200:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2606,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8238:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2609,
                  "src": "8223:20:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2605,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8223:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8158:89:12"
            },
            "returnParameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8264:0:12"
            },
            "scope": 3098,
            "src": "8143:122:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2610,
              "nodeType": "StructuredDocumentation",
              "src": "8270:245:12",
              "text": " Returns the percentage of the keyPrice to be sent to the referrer (in basis points)\n @param _referrer the address of the referrer\n @return referrerFee the percentage of the keyPrice to be sent to the referrer (in basis points)"
            },
            "functionSelector": "c23135dd",
            "id": 2617,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "referrerFees",
            "nameLocation": "8527:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2612,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "8548:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2617,
                  "src": "8540:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8540:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8539:19:12"
            },
            "returnParameters": {
              "id": 2616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "referrerFee",
                  "nameLocation": "8587:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2617,
                  "src": "8582:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8581:18:12"
            },
            "scope": 3098,
            "src": "8518:82:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2618,
              "nodeType": "StructuredDocumentation",
              "src": "8606:403:12",
              "text": " Set a specific percentage of the keyPrice to be sent to the referrer while purchasing, \n extending or renewing a key. \n @param _referrer the address of the referrer\n @param _feeBasisPoint the percentage of the price to be used for this \n specific referrer (in basis points)\n @dev To send a fixed percentage of the key price to all referrers, sett a percentage to `address(0)`"
            },
            "functionSelector": "debe2b0d",
            "id": 2625,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setReferrerFee",
            "nameLocation": "9021:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2620,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "9044:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "9036:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9036:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2622,
                  "mutability": "mutable",
                  "name": "_feeBasisPoint",
                  "nameLocation": "9060:14:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2625,
                  "src": "9055:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9055:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9035:40:12"
            },
            "returnParameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9084:0:12"
            },
            "scope": 3098,
            "src": "9012:73:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2626,
              "nodeType": "StructuredDocumentation",
              "src": "9089:234:12",
              "text": " Merge existing keys\n @param _tokenIdFrom the id of the token to substract time from\n @param _tokenIdTo the id of the destination token  to add time\n @param _amount the amount of time to transfer (in seconds)"
            },
            "functionSelector": "068208cd",
            "id": 2635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mergeKeys",
            "nameLocation": "9335:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "_tokenIdFrom",
                  "nameLocation": "9350:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "9345:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9345:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "mutability": "mutable",
                  "name": "_tokenIdTo",
                  "nameLocation": "9369:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "9364:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9364:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2632,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9386:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2635,
                  "src": "9381:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9381:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9344:50:12"
            },
            "returnParameters": {
              "id": 2634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9403:0:12"
            },
            "scope": 3098,
            "src": "9326:78:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2636,
              "nodeType": "StructuredDocumentation",
              "src": "9408:163:12",
              "text": " Deactivate an existing key\n @param _tokenId the id of token to burn\n @notice the key will be expired and ownership records will be destroyed"
            },
            "functionSelector": "42966c68",
            "id": 2641,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "9583:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2638,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9593:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "9588:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9588:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9587:15:12"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9611:0:12"
            },
            "scope": 3098,
            "src": "9574:38:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "9616:144:12",
              "text": " @param _gasRefundValue price in wei or token in smallest price unit\n @dev Set the value to be refunded to the sender on purchase"
            },
            "functionSelector": "f5766b39",
            "id": 2647,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGasRefundValue",
            "nameLocation": "9772:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "_gasRefundValue",
                  "nameLocation": "9798:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "9790:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9790:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9789:25:12"
            },
            "returnParameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9823:0:12"
            },
            "scope": 3098,
            "src": "9763:61:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2648,
              "nodeType": "StructuredDocumentation",
              "src": "9830:147:12",
              "text": " _gasRefundValue price in wei or token in smallest price unit\n @dev Returns the value/rpice to be refunded to the sender on purchase"
            },
            "functionSelector": "6207a8da",
            "id": 2653,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gasRefundValue",
            "nameLocation": "9989:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10003:2:12"
            },
            "returnParameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2651,
                  "mutability": "mutable",
                  "name": "_gasRefundValue",
                  "nameLocation": "10037:15:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2653,
                  "src": "10029:23:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10029:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10028:25:12"
            },
            "scope": 3098,
            "src": "9980:74:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2654,
              "nodeType": "StructuredDocumentation",
              "src": "10058:164:12",
              "text": " @notice returns the minimum price paid for a purchase with these params.\n @dev this considers any discount from Unlock or the OnKeyPurchase hook."
            },
            "functionSelector": "097ba333",
            "id": 2665,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "purchasePriceFor",
            "nameLocation": "10234:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2656,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "10264:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "10256:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10256:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2658,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "10288:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "10280:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10280:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2660,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10318:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "10303:20:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10250:77:12"
            },
            "returnParameters": {
              "id": 2664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2665,
                  "src": "10355:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10355:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10354:6:12"
            },
            "scope": 3098,
            "src": "10225:136:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2666,
              "nodeType": "StructuredDocumentation",
              "src": "10365:220:12",
              "text": " Allow a Lock manager to change the transfer fee.\n @dev Throws if called by other than a Lock manager\n @param _transferFeeBasisPoints The new transfer fee in basis-points(bps).\n Ex: 200 bps = 2%"
            },
            "functionSelector": "8577a6d5",
            "id": 2671,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransferFee",
            "nameLocation": "10597:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2668,
                  "mutability": "mutable",
                  "name": "_transferFeeBasisPoints",
                  "nameLocation": "10625:23:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2671,
                  "src": "10620:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2667,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10620:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10614:38:12"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10661:0:12"
            },
            "scope": 3098,
            "src": "10588:74:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2672,
              "nodeType": "StructuredDocumentation",
              "src": "10666:394:12",
              "text": " Determines how much of a fee would need to be paid in order to\n transfer to another account.  This is pro-rated so the fee goes \n down overtime.\n @dev Throws if _tokenId does not have a valid key\n @param _tokenId The id of the key check the transfer fee for.\n @param _time The amount of time to calculate the fee for.\n @return The transfer fee in seconds."
            },
            "functionSelector": "b1a3b25d",
            "id": 2681,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTransferFee",
            "nameLocation": "11072:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2674,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "11097:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "11092:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2673,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11092:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "11116:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "11111:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11111:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11086:39:12"
            },
            "returnParameters": {
              "id": 2680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "11149:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2678,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11149:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11148:6:12"
            },
            "scope": 3098,
            "src": "11063:92:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "11159:348:12",
              "text": " @dev Invoked by a Lock manager to expire the user's key \n and perform a refund and cancellation of the key\n @param _tokenId The key id we wish to refund to\n @param _amount The amount to refund to the key-owner\n @dev Throws if called by other than a Lock manager\n @dev Throws if _keyOwner does not have a valid key"
            },
            "functionSelector": "558b71e9",
            "id": 2689,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expireAndRefundFor",
            "nameLocation": "11519:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "11548:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2689,
                  "src": "11543:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11543:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2686,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11567:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2689,
                  "src": "11562:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2685,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11562:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11537:41:12"
            },
            "returnParameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11587:0:12"
            },
            "scope": 3098,
            "src": "11510:78:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2690,
              "nodeType": "StructuredDocumentation",
              "src": "11593:196:12",
              "text": " @dev allows the key manager to expire a given tokenId\n and send a refund to the keyOwner based on the amount of time remaining.\n @param _tokenId The id of the key to cancel."
            },
            "functionSelector": "d32bfb6c",
            "id": 2695,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancelAndRefund",
            "nameLocation": "11801:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2692,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "11822:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "11817:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2691,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11817:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11816:15:12"
            },
            "returnParameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11840:0:12"
            },
            "scope": 3098,
            "src": "11792:49:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2696,
              "nodeType": "StructuredDocumentation",
              "src": "11845:277:12",
              "text": " Allow a Lock manager to change the refund penalty.\n @dev Throws if called by other than a Lock manager\n @param _freeTrialLength The new duration of free trials for this lock\n @param _refundPenaltyBasisPoints The new refund penaly in basis-points(bps)"
            },
            "functionSelector": "39f46986",
            "id": 2703,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateRefundPenalty",
            "nameLocation": "12134:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2698,
                  "mutability": "mutable",
                  "name": "_freeTrialLength",
                  "nameLocation": "12164:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "12159:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12159:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "_refundPenaltyBasisPoints",
                  "nameLocation": "12191:25:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "12186:30:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12186:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12153:67:12"
            },
            "returnParameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12229:0:12"
            },
            "scope": 3098,
            "src": "12125:105:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2704,
              "nodeType": "StructuredDocumentation",
              "src": "12234:349:12",
              "text": " @dev Determines how much of a refund a key owner would receive if they issued\n @param _tokenId the id of the token to get the refund value for.\n @notice Due to the time required to mine a tx, the actual refund amount will be lower\n than what the user reads from this call.\n @return refund the amount of tokens refunded"
            },
            "functionSelector": "92ac98a5",
            "id": 2711,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCancelAndRefundValue",
            "nameLocation": "12595:23:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2706,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12629:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2711,
                  "src": "12624:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12624:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12618:23:12"
            },
            "returnParameters": {
              "id": 2710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2709,
                  "mutability": "mutable",
                  "name": "refund",
                  "nameLocation": "12670:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2711,
                  "src": "12665:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2708,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12665:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12664:13:12"
            },
            "scope": 3098,
            "src": "12586:92:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "564aa99d",
            "id": 2716,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addKeyGranter",
            "nameLocation": "12691:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12713:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "12705:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12705:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12704:17:12"
            },
            "returnParameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12730:0:12"
            },
            "scope": 3098,
            "src": "12682:49:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d2503485",
            "id": 2721,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLockManager",
            "nameLocation": "12744:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12767:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2721,
                  "src": "12759:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12759:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12758:17:12"
            },
            "returnParameters": {
              "id": 2720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12784:0:12"
            },
            "scope": 3098,
            "src": "12735:50:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "52b0f638",
            "id": 2728,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isKeyGranter",
            "nameLocation": "12798:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12819:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "12811:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12811:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12810:17:12"
            },
            "returnParameters": {
              "id": 2727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "12851:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2725,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12851:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12850:6:12"
            },
            "scope": 3098,
            "src": "12789:68:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "aae4b8f7",
            "id": 2735,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isLockManager",
            "nameLocation": "12870:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2730,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12892:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "12884:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12884:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12883:17:12"
            },
            "returnParameters": {
              "id": 2734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2735,
                  "src": "12924:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12924:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12923:6:12"
            },
            "scope": 3098,
            "src": "12861:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2736,
              "nodeType": "StructuredDocumentation",
              "src": "12936:112:12",
              "text": " Returns the address of the `onKeyPurchaseHook` hook.\n @return hookAddress address of the hook"
            },
            "functionSelector": "2d33dd5b",
            "id": 2741,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKeyPurchaseHook",
            "nameLocation": "13062:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13079:2:12"
            },
            "returnParameters": {
              "id": 2740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2739,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "13112:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "13104:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13104:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13103:21:12"
            },
            "scope": 3098,
            "src": "13053:72:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2742,
              "nodeType": "StructuredDocumentation",
              "src": "13129:110:12",
              "text": " Returns the address of the `onKeyCancelHook` hook.\n @return hookAddress address of the hook"
            },
            "functionSelector": "217751bc",
            "id": 2747,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKeyCancelHook",
            "nameLocation": "13253:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13268:2:12"
            },
            "returnParameters": {
              "id": 2746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2745,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "13301:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "13293:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13293:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13292:21:12"
            },
            "scope": 3098,
            "src": "13244:70:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2748,
              "nodeType": "StructuredDocumentation",
              "src": "13318:109:12",
              "text": " Returns the address of the `onValidKeyHook` hook.\n @return hookAddress address of the hook"
            },
            "functionSelector": "26e9ca07",
            "id": 2753,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onValidKeyHook",
            "nameLocation": "13441:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13455:2:12"
            },
            "returnParameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2751,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "13488:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "13480:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13480:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13479:21:12"
            },
            "scope": 3098,
            "src": "13432:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2754,
              "nodeType": "StructuredDocumentation",
              "src": "13505:109:12",
              "text": " Returns the address of the `onTokenURIHook` hook.\n @return hookAddress address of the hook"
            },
            "functionSelector": "7ec2a724",
            "id": 2759,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTokenURIHook",
            "nameLocation": "13626:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13640:2:12"
            },
            "returnParameters": {
              "id": 2758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2757,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "13673:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2759,
                  "src": "13665:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13665:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13664:21:12"
            },
            "scope": 3098,
            "src": "13617:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2760,
              "nodeType": "StructuredDocumentation",
              "src": "13692:112:12",
              "text": " Returns the address of the `onKeyTransferHook` hook.\n @return hookAddress address of the hook"
            },
            "functionSelector": "389f07e8",
            "id": 2765,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKeyTransferHook",
            "nameLocation": "13816:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13833:2:12"
            },
            "returnParameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2763,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "13866:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2765,
                  "src": "13858:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13858:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13857:21:12"
            },
            "scope": 3098,
            "src": "13807:72:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2766,
              "nodeType": "StructuredDocumentation",
              "src": "13885:112:12",
              "text": " Returns the address of the `onKeyExtendHook` hook.\n @return hookAddress the address ok the hook"
            },
            "functionSelector": "c907c3ec",
            "id": 2771,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKeyExtendHook",
            "nameLocation": "14009:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14024:2:12"
            },
            "returnParameters": {
              "id": 2770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2769,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "14057:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "14049:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14049:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14048:21:12"
            },
            "scope": 3098,
            "src": "14000:70:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "14074:110:12",
              "text": " Returns the address of the `onKeyGrantHook` hook.\n @return hookAddress the address ok the hook"
            },
            "functionSelector": "b129694e",
            "id": 2777,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKeyGrantHook",
            "nameLocation": "14196:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14210:2:12"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "mutability": "mutable",
                  "name": "hookAddress",
                  "nameLocation": "14243:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "14235:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14235:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14234:21:12"
            },
            "scope": 3098,
            "src": "14187:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2af9162a",
            "id": 2782,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeKeyGranter",
            "nameLocation": "14269:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2779,
                  "mutability": "mutable",
                  "name": "_granter",
                  "nameLocation": "14294:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14286:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14286:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14285:18:12"
            },
            "returnParameters": {
              "id": 2781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14312:0:12"
            },
            "scope": 3098,
            "src": "14260:53:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "f0ba6040",
            "id": 2785,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceLockManager",
            "nameLocation": "14326:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14345:2:12"
            },
            "returnParameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14356:0:12"
            },
            "scope": 3098,
            "src": "14317:40:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2786,
              "nodeType": "StructuredDocumentation",
              "src": "14361:77:12",
              "text": " @return the maximum number of key allowed for a single address"
            },
            "functionSelector": "d52e4a10",
            "id": 2791,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxKeysPerAddress",
            "nameLocation": "14450:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14467:2:12"
            },
            "returnParameters": {
              "id": 2790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2791,
                  "src": "14493:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14493:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14492:6:12"
            },
            "scope": 3098,
            "src": "14441:58:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "11a4c03a",
            "id": 2796,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expirationDuration",
            "nameLocation": "14512:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14530:2:12"
            },
            "returnParameters": {
              "id": 2795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2796,
                  "src": "14556:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14556:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14555:10:12"
            },
            "scope": 3098,
            "src": "14503:63:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a375cb05",
            "id": 2801,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freeTrialLength",
            "nameLocation": "14579:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14594:2:12"
            },
            "returnParameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2801,
                  "src": "14620:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14620:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14619:10:12"
            },
            "scope": 3098,
            "src": "14570:60:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "10e56973",
            "id": 2806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "keyPrice",
            "nameLocation": "14643:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14651:2:12"
            },
            "returnParameters": {
              "id": 2805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2806,
                  "src": "14677:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14677:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14676:10:12"
            },
            "scope": 3098,
            "src": "14634:53:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "74b6c106",
            "id": 2811,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxNumberOfKeys",
            "nameLocation": "14700:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14715:2:12"
            },
            "returnParameters": {
              "id": 2810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "14741:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14741:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14740:10:12"
            },
            "scope": 3098,
            "src": "14691:60:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "56e0d51f",
            "id": 2816,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundPenaltyBasisPoints",
            "nameLocation": "14764:24:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14788:2:12"
            },
            "returnParameters": {
              "id": 2815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2816,
                  "src": "14814:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14814:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14813:10:12"
            },
            "scope": 3098,
            "src": "14755:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "9d76ea58",
            "id": 2821,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenAddress",
            "nameLocation": "14837:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14849:2:12"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2821,
                  "src": "14875:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14875:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14874:10:12"
            },
            "scope": 3098,
            "src": "14828:57:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "183767da",
            "id": 2826,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFeeBasisPoints",
            "nameLocation": "14898:22:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14920:2:12"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "14946:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14946:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14945:10:12"
            },
            "scope": 3098,
            "src": "14889:67:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "0f15023b",
            "id": 2831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockProtocol",
            "nameLocation": "14969:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14983:2:12"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "15009:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15009:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15008:10:12"
            },
            "scope": 3098,
            "src": "14960:59:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4d025fed",
            "id": 2838,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "keyManagerOf",
            "nameLocation": "15032:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2838,
                  "src": "15045:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15045:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15044:6:12"
            },
            "returnParameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2838,
                  "src": "15074:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15074:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15073:10:12"
            },
            "scope": 3098,
            "src": "15023:61:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2839,
              "nodeType": "StructuredDocumentation",
              "src": "15162:618:12",
              "text": " @notice Allows the key owner to safely share their key (parent key) by\n transferring a portion of the remaining time to a new key (child key).\n @dev Throws if key is not valid.\n @dev Throws if `_to` is the zero address\n @param _to The recipient of the shared key\n @param _tokenId the key to share\n @param _timeShared The amount of time shared\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.\n @dev Emit Transfer event"
            },
            "functionSelector": "f12c6b6e",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shareKey",
            "nameLocation": "15792:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2841,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "15814:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "15806:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15806:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2843,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15828:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "15823:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15823:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2845,
                  "mutability": "mutable",
                  "name": "_timeShared",
                  "nameLocation": "15847:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "15842:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15842:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15800:62:12"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15871:0:12"
            },
            "scope": 3098,
            "src": "15783:89:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "15876:206:12",
              "text": " @notice Update transfer and cancel rights for a given key\n @param _tokenId The id of the key to assign rights for\n @param _keyManager The address to assign the rights to for the given key"
            },
            "functionSelector": "b11d7ec1",
            "id": 2856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setKeyManagerOf",
            "nameLocation": "16094:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "16120:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2856,
                  "src": "16115:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16115:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_keyManager",
                  "nameLocation": "16142:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2856,
                  "src": "16134:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16134:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16109:48:12"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16166:0:12"
            },
            "scope": 3098,
            "src": "16085:82:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2857,
              "nodeType": "StructuredDocumentation",
              "src": "16173:162:12",
              "text": " Check if a certain key is valid\n @param _tokenId the id of the key to check validity\n @notice this makes use of the onValidKeyHook if it is set"
            },
            "functionSelector": "a98d3623",
            "id": 2864,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidKey",
            "nameLocation": "16347:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2859,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "16368:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2864,
                  "src": "16363:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2858,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16363:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16357:23:12"
            },
            "returnParameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2864,
                  "src": "16416:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16416:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16415:6:12"
            },
            "scope": 3098,
            "src": "16338:84:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2865,
              "nodeType": "StructuredDocumentation",
              "src": "16428:230:12",
              "text": " Returns the number of keys owned by `_keyOwner` (expired or not)\n @param _keyOwner address for which we are retrieving the total number of keys\n @return numberOfKeys total number of keys owned by the address"
            },
            "functionSelector": "812eecd4",
            "id": 2872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalKeys",
            "nameLocation": "16670:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "_keyOwner",
                  "nameLocation": "16688:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "16680:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16680:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16679:19:12"
            },
            "returnParameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2870,
                  "mutability": "mutable",
                  "name": "numberOfKeys",
                  "nameLocation": "16727:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2872,
                  "src": "16722:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16722:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16721:19:12"
            },
            "scope": 3098,
            "src": "16661:80:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2873,
              "nodeType": "StructuredDocumentation",
              "src": "16747:72:12",
              "text": "@notice A descriptive name for a collection of NFTs in this contract"
            },
            "functionSelector": "06fdde03",
            "id": 2878,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "16831:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16835:2:12"
            },
            "returnParameters": {
              "id": 2877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "16875:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2878,
                  "src": "16861:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16861:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16860:21:12"
            },
            "scope": 3098,
            "src": "16822:60:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2879,
              "nodeType": "StructuredDocumentation",
              "src": "16959:19:12",
              "text": "From ERC165.sol"
            },
            "functionSelector": "01ffc9a7",
            "id": 2886,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "16990:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2881,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "17015:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "17008:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2880,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "17008:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17007:20:12"
            },
            "returnParameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "17051:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2883,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17051:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17050:6:12"
            },
            "scope": 3098,
            "src": "16981:76:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2887,
              "nodeType": "StructuredDocumentation",
              "src": "17153:182:12",
              "text": " In the specific case of a Lock, `balanceOf` returns only the tokens with a valid expiration timerange\n @return balance The number of valid keys owned by `_keyOwner`"
            },
            "functionSelector": "70a08231",
            "id": 2894,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "17347:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2889,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "17365:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2894,
                  "src": "17357:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17357:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17356:16:12"
            },
            "returnParameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "17404:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2894,
                  "src": "17396:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17396:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17395:17:12"
            },
            "scope": 3098,
            "src": "17338:75:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2895,
              "nodeType": "StructuredDocumentation",
              "src": "17417:74:12",
              "text": " @dev Returns the owner of the NFT specified by `tokenId`."
            },
            "functionSelector": "6352211e",
            "id": 2902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "17503:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2897,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17519:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "17511:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17511:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17510:17:12"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2900,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "17559:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2902,
                  "src": "17551:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17551:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17550:16:12"
            },
            "scope": 3098,
            "src": "17494:73:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2903,
              "nodeType": "StructuredDocumentation",
              "src": "17571:348:12",
              "text": " @dev Transfers a specific NFT (`tokenId`) from one account (`from`) to\n another (`to`).\n Requirements:\n - `from`, `to` cannot be zero.\n - `tokenId` must be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this\n NFT by either {approve} or {setApprovalForAll}."
            },
            "functionSelector": "42842e0e",
            "id": 2912,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "17931:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2905,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17956:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "17948:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17948:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2907,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17970:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "17962:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17962:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2909,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17982:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "17974:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17974:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17947:43:12"
            },
            "returnParameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17999:0:12"
            },
            "scope": 3098,
            "src": "17922:78:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2913,
              "nodeType": "StructuredDocumentation",
              "src": "18006:436:12",
              "text": " an ERC721-like function to transfer a token from one account to another. \n @param from the owner of token to transfer\n @param to the address that will receive the token\n @param tokenId the id of the token\n @dev Requirements: if the caller is not `from`, it must be approved to move this token by\n either {approve} or {setApprovalForAll}. \n The key manager will be reset to address zero after the transfer"
            },
            "functionSelector": "23b872dd",
            "id": 2922,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "18454:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18475:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2922,
                  "src": "18467:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18467:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18489:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2922,
                  "src": "18481:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18481:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18501:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2922,
                  "src": "18493:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18493:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18466:43:12"
            },
            "returnParameters": {
              "id": 2921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18518:0:12"
            },
            "scope": 3098,
            "src": "18445:74:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2923,
              "nodeType": "StructuredDocumentation",
              "src": "18523:530:12",
              "text": " Lending a key allows you to transfer the token while retaining the\n ownerships right by setting yourself as a key manager first. \n @param from the owner of token to transfer\n @param to the address that will receive the token\n @param tokenId the id of the token\n @notice This function can only be called by 1) the key owner when no key manager is set or 2) the key manager.\n After calling the function, the `_recipent` will be the new owner, and the sender of the tx\n will become the key manager."
            },
            "functionSelector": "0c2db8d1",
            "id": 2932,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lendKey",
            "nameLocation": "19065:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2925,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "19081:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2932,
                  "src": "19073:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19073:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19095:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2932,
                  "src": "19087:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19087:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19104:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2932,
                  "src": "19099:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19099:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19072:40:12"
            },
            "returnParameters": {
              "id": 2931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19121:0:12"
            },
            "scope": 3098,
            "src": "19056:66:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2933,
              "nodeType": "StructuredDocumentation",
              "src": "19126:277:12",
              "text": " Unlend is called when you have lent a key and want to claim its full ownership back. \n @param _recipient the address that will receive the token ownership\n @param _tokenId the id of the token\n @dev Only the key manager of the token can call this function"
            },
            "functionSelector": "407dc589",
            "id": 2940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlendKey",
            "nameLocation": "19415:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "19433:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "19425:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19425:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "19450:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "19445:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19445:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19424:35:12"
            },
            "returnParameters": {
              "id": 2939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19468:0:12"
            },
            "scope": 3098,
            "src": "19406:63:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 2947,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "19482:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2942,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19498:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "19490:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19490:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2944,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19510:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "19502:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19502:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19489:29:12"
            },
            "returnParameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19527:0:12"
            },
            "scope": 3098,
            "src": "19473:55:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2948,
              "nodeType": "StructuredDocumentation",
              "src": "19532:266:12",
              "text": " @notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return operator The approved address for this NFT, or the zero address if there is none"
            },
            "functionSelector": "081812fc",
            "id": 2955,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "19810:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2950,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "19830:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2955,
                  "src": "19822:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19822:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19821:18:12"
            },
            "returnParameters": {
              "id": 2954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2953,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19871:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2955,
                  "src": "19863:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19863:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19862:18:12"
            },
            "scope": 3098,
            "src": "19801:80:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2956,
              "nodeType": "StructuredDocumentation",
              "src": "19886:329:12",
              "text": " @dev Sets or unsets the approval of a given operator\n An operator is allowed to transfer all tokens of the sender on their behalf\n @param _operator operator address to set the approval\n @param _approved representing the status of the approval to be set\n @notice disabled when transfers are disabled"
            },
            "functionSelector": "a22cb465",
            "id": 2963,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "20227:17:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2958,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "20253:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2963,
                  "src": "20245:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20245:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2960,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "20269:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2963,
                  "src": "20264:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20264:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20244:35:12"
            },
            "returnParameters": {
              "id": 2962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20288:0:12"
            },
            "scope": 3098,
            "src": "20218:71:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2964,
              "nodeType": "StructuredDocumentation",
              "src": "20294:307:12",
              "text": " @dev Tells whether an operator is approved by a given keyManager\n @param _owner owner address which you want to query the approval of\n @param _operator operator address which you want to query the approval of\n @return bool whether the given operator is approved by the given owner"
            },
            "functionSelector": "e985e9c5",
            "id": 2973,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "20613:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2966,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "20638:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2973,
                  "src": "20630:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20630:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "20654:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2973,
                  "src": "20646:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20646:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20629:35:12"
            },
            "returnParameters": {
              "id": 2972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2971,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2973,
                  "src": "20688:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2970,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20688:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20687:6:12"
            },
            "scope": 3098,
            "src": "20604:90:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "b88d4fde",
            "id": 2984,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "20707:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2975,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "20732:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2984,
                  "src": "20724:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20724:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2977,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20746:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2984,
                  "src": "20738:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20738:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2979,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20758:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2984,
                  "src": "20750:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20750:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2981,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "20782:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2984,
                  "src": "20767:19:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2980,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20767:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20723:64:12"
            },
            "returnParameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20796:0:12"
            },
            "scope": 3098,
            "src": "20698:99:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "18160ddd",
            "id": 2989,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "20810:11:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20821:2:12"
            },
            "returnParameters": {
              "id": 2988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2989,
                  "src": "20847:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20847:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20846:9:12"
            },
            "scope": 3098,
            "src": "20801:55:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2f745c59",
            "id": 2998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "20868:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2991,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "20896:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "20888:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20888:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "20912:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "20904:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20904:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20887:31:12"
            },
            "returnParameters": {
              "id": 2997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20950:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2998,
                  "src": "20942:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20942:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20941:17:12"
            },
            "scope": 3098,
            "src": "20859:100:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4f6ccce7",
            "id": 3005,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "20972:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3000,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "20993:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "20985:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20985:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20984:15:12"
            },
            "returnParameters": {
              "id": 3004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "21023:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21023:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21022:9:12"
            },
            "scope": 3098,
            "src": "20963:69:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3006,
              "nodeType": "StructuredDocumentation",
              "src": "21036:64:12",
              "text": " Innherited from Open Zeppelin AccessControl.sol"
            },
            "functionSelector": "248a9ca3",
            "id": 3013,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleAdmin",
            "nameLocation": "21112:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3008,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "21133:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3013,
                  "src": "21125:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21125:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21124:14:12"
            },
            "returnParameters": {
              "id": 3012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3013,
                  "src": "21162:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21162:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21161:9:12"
            },
            "scope": 3098,
            "src": "21103:68:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2f2ff15d",
            "id": 3020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantRole",
            "nameLocation": "21183:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "21201:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3020,
                  "src": "21193:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21193:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3017,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21215:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3020,
                  "src": "21207:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21207:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21192:31:12"
            },
            "returnParameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21232:0:12"
            },
            "scope": 3098,
            "src": "21174:59:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d547741f",
            "id": 3027,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeRole",
            "nameLocation": "21245:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3022,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "21264:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "21256:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3021,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21256:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3024,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21278:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "21270:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21270:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21255:31:12"
            },
            "returnParameters": {
              "id": 3026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21295:0:12"
            },
            "scope": 3098,
            "src": "21236:60:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "36568abe",
            "id": 3034,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceRole",
            "nameLocation": "21308:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3029,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "21329:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "21321:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3028,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21321:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3031,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21343:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3034,
                  "src": "21335:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21335:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21320:31:12"
            },
            "returnParameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21360:0:12"
            },
            "scope": 3098,
            "src": "21299:62:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "91d14854",
            "id": 3043,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasRole",
            "nameLocation": "21373:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3036,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "21389:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "21381:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21381:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21403:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "21395:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21395:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21380:31:12"
            },
            "returnParameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3043,
                  "src": "21435:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21435:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21434:6:12"
            },
            "scope": 3098,
            "src": "21364:77:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3044,
              "nodeType": "StructuredDocumentation",
              "src": "21445:571:12",
              "text": " @param _tokenId the id of the token to transfer time from\n @param _to the recipient of the new token with time\n @param _value sends a token with _value * expirationDuration (the amount of time remaining on a standard purchase).\n @dev The typical use case would be to call this with _value 1, which is on par with calling `transferFrom`. If the user\n has more than `expirationDuration` time remaining this may use the `shareKey` function to send some but not all of the token.\n @return success the result of the transfer operation"
            },
            "functionSelector": "f8548e36",
            "id": 3055,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "22028:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3046,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "22047:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3055,
                  "src": "22042:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3045,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22042:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3048,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "22069:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3055,
                  "src": "22061:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22061:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3050,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "22083:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3055,
                  "src": "22078:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3049,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22078:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22036:57:12"
            },
            "returnParameters": {
              "id": 3054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3053,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "22121:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3055,
                  "src": "22116:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22116:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22115:14:12"
            },
            "scope": 3098,
            "src": "22019:111:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3056,
              "nodeType": "StructuredDocumentation",
              "src": "22134:370:12",
              "text": "`owner()` is provided as an helper to mimick the `Ownable` contract ABI.\n The `Ownable` logic is used by many 3rd party services to determine\n contract ownership - e.g. who is allowed to edit metadata on Opensea.\n \n @notice This logic is NOT used internally by the Unlock Protocol and is made \n available only as a convenience helper."
            },
            "functionSelector": "8da5cb5b",
            "id": 3061,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "22516:5:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22521:2:12"
            },
            "returnParameters": {
              "id": 3060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3059,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "22555:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3061,
                  "src": "22547:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22547:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22546:15:12"
            },
            "scope": 3098,
            "src": "22507:55:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "13af4035",
            "id": 3066,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOwner",
            "nameLocation": "22574:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3063,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "22591:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3066,
                  "src": "22583:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22583:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22582:17:12"
            },
            "returnParameters": {
              "id": 3065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22608:0:12"
            },
            "scope": 3098,
            "src": "22565:44:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2f54bf6e",
            "id": 3073,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "22621:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3068,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "22637:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3073,
                  "src": "22629:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22629:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22628:17:12"
            },
            "returnParameters": {
              "id": 3072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3071,
                  "mutability": "mutable",
                  "name": "isOwner",
                  "nameLocation": "22674:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3073,
                  "src": "22669:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22669:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22668:14:12"
            },
            "scope": 3098,
            "src": "22612:71:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3074,
              "nodeType": "StructuredDocumentation",
              "src": "22687:389:12",
              "text": " Migrate data from the previous single owner => key mapping to \n the new data structure w multiple tokens.\n @param _calldata an ABI-encoded representation of the params (v10: the number of records to migrate as `uint`)\n @dev when all record schemas are sucessfully upgraded, this function will update the `schemaVersion`\n variable to the latest/current lock version"
            },
            "functionSelector": "8932a90d",
            "id": 3079,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "23088:7:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3076,
                  "mutability": "mutable",
                  "name": "_calldata",
                  "nameLocation": "23111:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3079,
                  "src": "23096:24:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3075,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23096:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23095:26:12"
            },
            "returnParameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23130:0:12"
            },
            "scope": 3098,
            "src": "23079:52:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3080,
              "nodeType": "StructuredDocumentation",
              "src": "23135:269:12",
              "text": " Returns the version number of the data schema currently used by the lock\n @notice if this is different from `publicLockVersion`, then the ability to purchase, grant\n or extend keys is disabled.\n @dev will return 0 if no ;igration has ever been run"
            },
            "functionSelector": "4e2ce6d3",
            "id": 3085,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "schemaVersion",
            "nameLocation": "23416:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23429:2:12"
            },
            "returnParameters": {
              "id": 3084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3085,
                  "src": "23455:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3082,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23455:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23454:6:12"
            },
            "scope": 3098,
            "src": "23407:54:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3086,
              "nodeType": "StructuredDocumentation",
              "src": "23465:97:12",
              "text": " Set the schema version to the latest\n @notice only lock manager call call this"
            },
            "functionSelector": "f32e8b24",
            "id": 3089,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateSchemaVersion",
            "nameLocation": "23574:19:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23593:2:12"
            },
            "returnParameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23604:0:12"
            },
            "scope": 3098,
            "src": "23565:40:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3090,
              "nodeType": "StructuredDocumentation",
              "src": "23611:205:12",
              "text": " Renew a given token\n @notice only works for non-free, expiring, ERC20 locks\n @param _tokenId the ID fo the token to renew\n @param _referrer the address of the person to be granted UDT"
            },
            "functionSelector": "8505fe95",
            "id": 3097,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renewMembershipFor",
            "nameLocation": "23828:18:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3092,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "23857:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3097,
                  "src": "23852:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3091,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23852:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3094,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "23879:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 3097,
                  "src": "23871:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23871:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23846:46:12"
            },
            "returnParameters": {
              "id": 3096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23901:0:12"
            },
            "scope": 3098,
            "src": "23819:83:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3099,
        "src": "143:23761:12",
        "usedErrors": []
      }
    ],
    "src": "32:23873:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-06-02T06:41:53.171Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "returns": {
          "balance": "The number of valid keys owned by `_keyOwner`"
        }
      },
      "burn(uint256)": {
        "params": {
          "_tokenId": "the id of token to burn"
        }
      },
      "cancelAndRefund(uint256)": {
        "details": "allows the key manager to expire a given tokenId and send a refund to the keyOwner based on the amount of time remaining.",
        "params": {
          "_tokenId": "The id of the key to cancel."
        }
      },
      "expireAndRefundFor(uint256,uint256)": {
        "details": "Invoked by a Lock manager to expire the user's key  and perform a refund and cancellation of the keyThrows if called by other than a Lock managerThrows if _keyOwner does not have a valid key",
        "params": {
          "_amount": "The amount to refund to the key-owner",
          "_tokenId": "The key id we wish to refund to"
        }
      },
      "extend(uint256,uint256,address,bytes)": {
        "details": "Extend functionThrows if lock is disabled or key does not exist for _recipient. Throws if _recipient == address(0).",
        "params": {
          "_data": "arbitrary data populated by the front-end which initiated the sale",
          "_referrer": "address of the user making the referral",
          "_tokenId": "the id of the key to extend",
          "_value": "the number of tokens to pay for this purchase >= the current keyPrice - any applicable discount (_value is ignored when using ETH)"
        }
      },
      "gasRefundValue()": {
        "details": "Returns the value/rpice to be refunded to the sender on purchase"
      },
      "getApproved(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The NFT to find the approved address for"
        },
        "returns": {
          "operator": "The approved address for this NFT, or the zero address if there is none"
        }
      },
      "getCancelAndRefundValue(uint256)": {
        "details": "Determines how much of a refund a key owner would receive if they issued",
        "params": {
          "_tokenId": "the id of the token to get the refund value for."
        },
        "returns": {
          "refund": "the amount of tokens refunded"
        }
      },
      "getHasValidKey(address)": {
        "params": {
          "_user": "The address of the key owner"
        }
      },
      "getTransferFee(uint256,uint256)": {
        "details": "Throws if _tokenId does not have a valid key",
        "params": {
          "_time": "The amount of time to calculate the fee for.",
          "_tokenId": "The id of the key check the transfer fee for."
        },
        "returns": {
          "_0": "The transfer fee in seconds."
        }
      },
      "grantKeyExtension(uint256,uint256)": {
        "details": "set `_duration` to 0 to use the default duration of the lock",
        "params": {
          "_duration": "The duration in secondes to add ot the key",
          "_tokenId": "The id of the token to extend"
        }
      },
      "grantKeys(address[],uint256[],address[])": {
        "details": "Throws if called by other than a Lock manager",
        "params": {
          "_expirationTimestamps": "An array of expiration Timestamps for the keys being granted",
          "_recipients": "An array of receiving addresses"
        },
        "returns": {
          "_0": "the ids of the granted tokens"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given keyManager",
        "params": {
          "_operator": "operator address which you want to query the approval of",
          "_owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "isValidKey(uint256)": {
        "params": {
          "_tokenId": "the id of the key to check validity"
        }
      },
      "keyExpirationTimestampFor(uint256)": {
        "details": "Returns the key's ExpirationTimestamp field for a given owner.Returns 0 if the owner has never owned a key for this lock",
        "params": {
          "_tokenId": "the id of the key"
        }
      },
      "lendKey(address,address,uint256)": {
        "params": {
          "from": "the owner of token to transfer",
          "to": "the address that will receive the token",
          "tokenId": "the id of the token"
        }
      },
      "maxKeysPerAddress()": {
        "returns": {
          "_0": "the maximum number of key allowed for a single address"
        }
      },
      "mergeKeys(uint256,uint256,uint256)": {
        "params": {
          "_amount": "the amount of time to transfer (in seconds)",
          "_tokenIdFrom": "the id of the token to substract time from",
          "_tokenIdTo": "the id of the destination token  to add time"
        }
      },
      "migrate(bytes)": {
        "details": "when all record schemas are sucessfully upgraded, this function will update the `schemaVersion` variable to the latest/current lock version",
        "params": {
          "_calldata": "an ABI-encoded representation of the params (v10: the number of records to migrate as `uint`)"
        }
      },
      "onKeyCancelHook()": {
        "returns": {
          "hookAddress": "address of the hook"
        }
      },
      "onKeyExtendHook()": {
        "returns": {
          "hookAddress": "the address ok the hook"
        }
      },
      "onKeyGrantHook()": {
        "returns": {
          "hookAddress": "the address ok the hook"
        }
      },
      "onKeyPurchaseHook()": {
        "returns": {
          "hookAddress": "address of the hook"
        }
      },
      "onKeyTransferHook()": {
        "returns": {
          "hookAddress": "address of the hook"
        }
      },
      "onTokenURIHook()": {
        "returns": {
          "hookAddress": "address of the hook"
        }
      },
      "onValidKeyHook()": {
        "returns": {
          "hookAddress": "address of the hook"
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the NFT specified by `tokenId`."
      },
      "publicLockVersion()": {
        "returns": {
          "_0": "The current version number."
        }
      },
      "purchase(uint256[],address[],address[],address[],bytes[])": {
        "details": "Purchase functionSetting _value to keyPrice exactly doubles as a security feature. That way if the lock owner increases the price while my transaction is pending I can't be charged more than I expected (only applicable to ERC-20 when more than keyPrice is approved for spending).",
        "params": {
          "_data": "array of arbitrary data populated by the front-end which initiated the sale",
          "_keyManagers": "optional array of addresses to grant managing rights to a specific address on creation",
          "_recipients": "array of addresses of the recipients of the purchased key",
          "_referrers": "array of addresses of the users making the referral",
          "_values": "array of tokens amount to pay for this purchase >= the current keyPrice - any applicable discount (_values is ignored when using ETH)"
        },
        "returns": {
          "tokenIds": "the ids of the created tokens "
        }
      },
      "purchasePriceFor(address,address,bytes)": {
        "details": "this considers any discount from Unlock or the OnKeyPurchase hook."
      },
      "referrerFees(address)": {
        "params": {
          "_referrer": "the address of the referrer"
        },
        "returns": {
          "referrerFee": "the percentage of the keyPrice to be sent to the referrer (in basis points)"
        }
      },
      "renewMembershipFor(uint256,address)": {
        "params": {
          "_referrer": "the address of the person to be granted UDT",
          "_tokenId": "the ID fo the token to renew"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers a specific NFT (`tokenId`) from one account (`from`) to another (`to`). Requirements: - `from`, `to` cannot be zero. - `tokenId` must be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this NFT by either {approve} or {setApprovalForAll}."
      },
      "schemaVersion()": {
        "details": "will return 0 if no ;igration has ever been run"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "_approved": "representing the status of the approval to be set",
          "_operator": "operator address to set the approval"
        }
      },
      "setEventHooks(address,address,address,address,address,address,address)": {
        "params": {
          "_onKeyCancelHook": "Hook called when the internal `_cancelAndRefund` function is called",
          "_onKeyExtendHook": "Hook called when a key is extended or renewed",
          "_onKeyGrantHook": "Hook called when a key is granted",
          "_onKeyPurchaseHook": "Hook called when the `purchase` function is called",
          "_onKeyTransferHook": "Hook called when a key is transfered",
          "_onTokenURIHook": "Hook called to generate a data URI used for NFT metadata",
          "_onValidKeyHook": "Hook called to determine if the contract should overide the status for a given address"
        }
      },
      "setGasRefundValue(uint256)": {
        "details": "Set the value to be refunded to the sender on purchase",
        "params": {
          "_gasRefundValue": "price in wei or token in smallest price unit"
        }
      },
      "setKeyManagerOf(uint256,address)": {
        "params": {
          "_keyManager": "The address to assign the rights to for the given key",
          "_tokenId": "The id of the key to assign rights for"
        }
      },
      "setLockMetadata(string,string,string)": {
        "params": {
          "_baseTokenURI": "the baseTokenURI for this Lock",
          "_lockName": "a descriptive name for this Lock.",
          "_lockSymbol": "a Symbol for this Lock (default to KEY)."
        }
      },
      "setReferrerFee(address,uint256)": {
        "details": "To send a fixed percentage of the key price to all referrers, sett a percentage to `address(0)`",
        "params": {
          "_feeBasisPoint": "the percentage of the price to be used for this  specific referrer (in basis points)",
          "_referrer": "the address of the referrer"
        }
      },
      "shareKey(address,uint256,uint256)": {
        "details": "Throws if key is not valid.Throws if `_to` is the zero addressEmit Transfer event",
        "params": {
          "_timeShared": "The amount of time shared checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256('onERC721Received(address,address,uint,bytes)'))`.",
          "_to": "The recipient of the shared key",
          "_tokenId": "the key to share"
        }
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenURI(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC  3986. The URI may point to a JSON file that conforms to the \"ERC721  Metadata JSON Schema\". https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md",
        "params": {
          "_tokenId": "The tokenID we're inquiring about"
        },
        "returns": {
          "_0": "String representing the URI for the requested token"
        }
      },
      "totalKeys(address)": {
        "params": {
          "_keyOwner": "address for which we are retrieving the total number of keys"
        },
        "returns": {
          "numberOfKeys": "total number of keys owned by the address"
        }
      },
      "transfer(uint256,address,uint256)": {
        "details": "The typical use case would be to call this with _value 1, which is on par with calling `transferFrom`. If the user has more than `expirationDuration` time remaining this may use the `shareKey` function to send some but not all of the token.",
        "params": {
          "_to": "the recipient of the new token with time",
          "_tokenId": "the id of the token to transfer time from",
          "_value": "sends a token with _value * expirationDuration (the amount of time remaining on a standard purchase)."
        },
        "returns": {
          "success": "the result of the transfer operation"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Requirements: if the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.  The key manager will be reset to address zero after the transfer",
        "params": {
          "from": "the owner of token to transfer",
          "to": "the address that will receive the token",
          "tokenId": "the id of the token"
        }
      },
      "unlendKey(address,uint256)": {
        "details": "Only the key manager of the token can call this function",
        "params": {
          "_recipient": "the address that will receive the token ownership",
          "_tokenId": "the id of the token"
        }
      },
      "updateKeyPricing(uint256,address)": {
        "details": "Throws if called by other than a Lock managerThrows if lock has been disabledThrows if _tokenAddress is not a valid token",
        "params": {
          "_keyPrice": "The new price to set for keys",
          "_tokenAddress": "The address of the erc20 token to use for pricing the keys, or 0 to use ETH"
        }
      },
      "updateLockConfig(uint256,uint256,uint256)": {
        "details": "_maxNumberOfKeys Can't be smaller than the existing supply ",
        "params": {
          "_maxKeysPerAcccount": "the maximum amount of key a single user can own",
          "_maxNumberOfKeys": "uint the maximum number of keys",
          "_newExpirationDuration": "the new amount of time for each key purchased or type(uint).max for a non-expiring key"
        }
      },
      "updateRefundPenalty(uint256,uint256)": {
        "details": "Throws if called by other than a Lock manager",
        "params": {
          "_freeTrialLength": "The new duration of free trials for this lock",
          "_refundPenaltyBasisPoints": "The new refund penaly in basis-points(bps)"
        }
      },
      "updateTransferFee(uint256)": {
        "details": "Throws if called by other than a Lock manager",
        "params": {
          "_transferFeeBasisPoints": "The new transfer fee in basis-points(bps). Ex: 200 bps = 2%"
        }
      },
      "withdraw(address,address,uint256)": {
        "details": "Called by lock manager to withdraw all funds from the lock",
        "params": {
          "_amount": "specifies the max amount to withdraw, which may be reduced when considering the available balance. Set to 0 or MAX_UINT to withdraw everything.  -- however be wary of draining funds as it breaks the `cancelAndRefund` and `expireAndRefundFor` use cases.",
          "_recipient": "specifies the address that will receive the tokens",
          "_tokenAddress": "specifies the token address to withdraw or 0 for ETH. This is usually the same as `tokenAddress` in MixinFunds."
        }
      }
    },
    "title": "The PublicLock Interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "In the specific case of a Lock, `balanceOf` returns only the tokens with a valid expiration timerange"
      },
      "burn(uint256)": {
        "notice": "Deactivate an existing keythe key will be expired and ownership records will be destroyed"
      },
      "gasRefundValue()": {
        "notice": "_gasRefundValue price in wei or token in smallest price unit"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single NFT"
      },
      "getCancelAndRefundValue(uint256)": {
        "notice": "Due to the time required to mine a tx, the actual refund amount will be lower than what the user reads from this call."
      },
      "getHasValidKey(address)": {
        "notice": "Checks if the user has a non-expired key."
      },
      "getRoleAdmin(bytes32)": {
        "notice": "Innherited from Open Zeppelin AccessControl.sol"
      },
      "getTransferFee(uint256,uint256)": {
        "notice": "Determines how much of a fee would need to be paid in order to transfer to another account.  This is pro-rated so the fee goes  down overtime."
      },
      "grantKeyExtension(uint256,uint256)": {
        "notice": "Allows the Lock owner to extend an existing keys with no charge."
      },
      "grantKeys(address[],uint256[],address[])": {
        "notice": "Allows a Lock manager to give a collection of users a key with no charge. Each key may be assigned a different expiration date."
      },
      "initialize(address,uint256,address,uint256,uint256,string)": {
        "notice": "Functions"
      },
      "isValidKey(uint256)": {
        "notice": "Check if a certain key is validthis makes use of the onValidKeyHook if it is set"
      },
      "lendKey(address,address,uint256)": {
        "notice": "Lending a key allows you to transfer the token while retaining the ownerships right by setting yourself as a key manager first. This function can only be called by 1) the key owner when no key manager is set or 2) the key manager. After calling the function, the `_recipent` will be the new owner, and the sender of the tx will become the key manager."
      },
      "mergeKeys(uint256,uint256,uint256)": {
        "notice": "Merge existing keys"
      },
      "migrate(bytes)": {
        "notice": "Migrate data from the previous single owner => key mapping to  the new data structure w multiple tokens."
      },
      "name()": {
        "notice": "A descriptive name for a collection of NFTs in this contract"
      },
      "numberOfOwners()": {
        "notice": "Public function which returns the total number of unique owners (both expired and valid).  This may be larger than totalSupply."
      },
      "onKeyCancelHook()": {
        "notice": "Returns the address of the `onKeyCancelHook` hook."
      },
      "onKeyExtendHook()": {
        "notice": "Returns the address of the `onKeyExtendHook` hook."
      },
      "onKeyGrantHook()": {
        "notice": "Returns the address of the `onKeyGrantHook` hook."
      },
      "onKeyPurchaseHook()": {
        "notice": "Returns the address of the `onKeyPurchaseHook` hook."
      },
      "onKeyTransferHook()": {
        "notice": "Returns the address of the `onKeyTransferHook` hook."
      },
      "onTokenURIHook()": {
        "notice": "Returns the address of the `onTokenURIHook` hook."
      },
      "onValidKeyHook()": {
        "notice": "Returns the address of the `onValidKeyHook` hook."
      },
      "owner()": {
        "notice": "`owner()` is provided as an helper to mimick the `Ownable` contract ABI. The `Ownable` logic is used by many 3rd party services to determine contract ownership - e.g. who is allowed to edit metadata on Opensea. This logic is NOT used internally by the Unlock Protocol and is made  available only as a convenience helper."
      },
      "publicLockVersion()": {
        "notice": "The version number of the current implementation on this network."
      },
      "purchase(uint256[],address[],address[],address[],bytes[])": {
        "notice": "when called for an existing and non-expired key, the `_keyManager` param will be ignored "
      },
      "purchasePriceFor(address,address,bytes)": {
        "notice": "returns the minimum price paid for a purchase with these params."
      },
      "referrerFees(address)": {
        "notice": "Returns the percentage of the keyPrice to be sent to the referrer (in basis points)"
      },
      "renewMembershipFor(uint256,address)": {
        "notice": "Renew a given tokenonly works for non-free, expiring, ERC20 locks"
      },
      "schemaVersion()": {
        "notice": "Returns the version number of the data schema currently used by the lockif this is different from `publicLockVersion`, then the ability to purchase, grant or extend keys is disabled."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "disabled when transfers are disabled"
      },
      "setEventHooks(address,address,address,address,address,address,address)": {
        "notice": "Allows a Lock manager to add or remove an event hook"
      },
      "setKeyManagerOf(uint256,address)": {
        "notice": "Update transfer and cancel rights for a given key"
      },
      "setLockMetadata(string,string,string)": {
        "notice": "Allows the Lock owner to assign "
      },
      "setReferrerFee(address,uint256)": {
        "notice": "Set a specific percentage of the keyPrice to be sent to the referrer while purchasing,  extending or renewing a key. "
      },
      "shareKey(address,uint256,uint256)": {
        "notice": "Allows the key owner to safely share their key (parent key) by transferring a portion of the remaining time to a new key (child key)."
      },
      "supportsInterface(bytes4)": {
        "notice": "From ERC165.sol"
      },
      "tokenURI(uint256)": {
        "notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
      },
      "totalKeys(address)": {
        "notice": "Returns the number of keys owned by `_keyOwner` (expired or not)"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "an ERC721-like function to transfer a token from one account to another. "
      },
      "unlendKey(address,uint256)": {
        "notice": "Unlend is called when you have lent a key and want to claim its full ownership back. "
      },
      "updateKeyPricing(uint256,address)": {
        "notice": "A function which lets a Lock manager of the lock to change the price for future purchases."
      },
      "updateLockConfig(uint256,uint256,uint256)": {
        "notice": "Update the main key properties for the entire lock:   - default duration of each key - the maximum number of keys the lock can edit - the maximum number of keys a single address can holdkeys previously bought are unaffected by this changes in expiration duration (i.e. existing keys timestamps are not recalculated/updated)"
      },
      "updateRefundPenalty(uint256,uint256)": {
        "notice": "Allow a Lock manager to change the refund penalty."
      },
      "updateSchemaVersion()": {
        "notice": "Set the schema version to the latestonly lock manager call call this"
      },
      "updateTransferFee(uint256)": {
        "notice": "Allow a Lock manager to change the transfer fee."
      }
    },
    "version": 1
  }
}